{"version":3,"sources":["serviceWorker.js","components/global/AlertProvider.jsx","hooks/useAlert.jsx","components/ErrorBadge.jsx","util.js","server.js","components/account/accountSlice.jsx","components/FormDialog.jsx","components/account/LinkSpotifyDialog.jsx","components/intersect/intersectSlice.jsx","components/matches/matchesSlice.jsx","components/meet/meetSlice.jsx","components/account/LogoutDialog.jsx","components/icons/SpotifyIcon.jsx","components/AppTabBar.jsx","components/account/CreateAccountDialog.jsx","components/ButtonProgress.jsx","theme.js","components/account/Login.jsx","components/RefreshButton.jsx","components/user/UserAvatar.jsx","components/user/UserTile.jsx","asyncInterval.js","components/user/chat/ChatBubble.jsx","components/user/chat/ChatInput.jsx","components/user/chat/ChatView.jsx","components/account/EditProfileDialog.jsx","components/account/Account.jsx","components/SongTile.jsx","components/SongTileList.jsx","components/user/UserView.jsx","components/matches/MatchDismissDialog.jsx","components/matches/MatchesView.jsx","components/meet/Meet.jsx","components/intersect/Intersect.jsx","components/matches/Matches.jsx","components/App.jsx","store.js","components/global/AlertNotification.jsx","index.js"],"names":["Boolean","window","location","hostname","match","AlertContext","React","createContext","alert","addAlert","removeAlert","AlertProvider","children","useState","setAlert","context","useCallback","title","text","severity","type","Provider","value","useAlert","useContext","ErrorBadge","props","Badge","color","badgeContent","Typography","variant","cleanEmptyKeys","obj","cleaned","k","undefined","checkValidEmail","email","test","toLowerCase","length","checkValidPassword","password","checkValidUsername","username","axios","defaults","withCredentials","xsrfHeaderName","SERVER_URL","ENDPOINTS","login","logout","signup","profile","linkSpotifyAccount","checkSpotifyLinked","getPotentialMatches","getAcceptedMatches","rejectMatch","acceptMatch","messages","userSongIntersection","byUserId","byUsername","syncProfilePic","spotifyLinkedInterval","joinUrl","URL","args","endsWith","join","a","urlPath","dataToSend","Username","Password","post","then","r","status","Error","data","userId","id","catch","e","get","defaultDisplayName","split","Email","DisplayName","ZipCode","ProfilePicURL","hasOwnProperty","response","newErr","name","getProfile","baseUrl","replace","displayName","profilePicUrl","description","Description","editProfile","changes","url","IsLinked","spotifyLinked","waitUntilSpotifyLinked","start","clearInterval","iters","Promise","resolve","reject","setInterval","console","log","stop","getMatches","all","map","m","profiles","getUserSongIntersection","songs","i","matchId","endpointKey","Object","keys","songId","DEFAULT_DATA","loggedIn","spotify","linked","accountSlice","createSlice","initialState","reducers","setLoggedIn","state","action","payload","setUsername","setUserId","setProfile","setSpotifyLinked","resetAccountData","actions","useStyles","makeStyles","theme","dialogContent","maxWidth","minWidth","paddingTop","spacing","cancelButton","palette","error","light","submitButton","primary","EditProfileDialog","classes","open","submitButtonDisabled","cancelButtonDisabled","onClose","onCancel","onSubmit","submitButtonText","cancelButtonText","Dialog","AppBar","position","DialogTitle","DialogContent","className","DialogActions","Button","onClick","disabled","editableMargin","marginTop","spotifyLink","textDecoration","LinkSpotifyDialog","onSuccess","dispatch","useDispatch","useSelector","account","spotifyUrl","setSpotifyUrl","linkError","setLinkError","useEffect","head","message","onDialogCancel","Alert","href","target","rel","fullWidth","CircularProgress","size","thickness","intersectSlice","setIntersectUsername","setSongs","resetIntersectData","matchesSlice","matches","setMatches","clearMatches","setMessages","resetMatchesData","meetSlice","LogoutDialog","resetMeetData","SpotifyIcon","SvgIcon","viewBox","style","fill","d","root","backgroundColor","background","default","height","width","display","flexDirection","tabs","flexGrow","buttons","padding","divider","borderColor","logoutButton","VerticalTabBar","activeIndex","linkSpotifyDialogOpen","setLinkSpotifyDialogOpen","logoutDialogOpen","setLogoutDialogOpen","Paper","square","Tabs","orientation","IconButton","overlap","invisible","hintText","hint","CreateAccountDialog","setEmail","setPassword","passwordRepeat","setPasswordRepeat","usernameChanged","setUsernameChanged","emailChanged","setEmailChanged","passwordChanged","setPasswordChanged","passwordRepeatChanged","setPasswordRepeatChanged","usernameError","emailError","passwordError","passwordRepeatError","str","TextField","label","helperText","required","onChange","inputProps","spellCheck","ButtonProgress","createMuiTheme","main","dark","contrastText","secondary","pink","gray","red","tile","images","squareImageHeight","cardImageHeight","defaultOpts","deg","getGradient","colors","opts","optsWithDefaults","assign","registerButton","Login","passwordRef","useRef","loginVisible","setLoginVisible","welcomeVisible","setWelcomeVisible","timeoutVar","setTimeoutVar","loginLoading","setLoginLoading","createDialogOpen","setCreateDialogOpen","onLoginClick","setTimeout","TRANSITION_DURATION","clearTimeout","onRegisterSuccess","onPassKeypress","keyCode","onUsernameKeypress","current","focus","gridItemStyle","textAlign","paddingBottom","loginComp","Grid","item","xs","onKeyDown","inputRef","autoComplete","disableElevation","welcomeComp","loginRef","welcomeRef","CSSTransition","classNames","timeout","unmountOnExit","nodeRef","in","justify","alignContent","container","ref","button","margin","progress","RefreshButton","loading","buttonProps","activeComp","aria-label","UserAvatar","imgProps","avatarProps","firstLetter","toUpperCase","Avatar","refresh","right","top","closeButton","marginRight","UserTileActions","closeButtonDisabled","onCloseClick","songButtonDisabled","onSongsClick","actionButtonDisabled","onActionClick","actionButtonIcon","CardActions","disableSpacing","MemoizedUserTileActions","memo","UserTile","user","onProfileClick","cardProps","actionAreaProps","Card","raised","CardActionArea","CardHeader","avatar","src","setAsyncInterval","func","ms","intervalObj","run","intervalMethod","clearAsyncInterval","primaryColor","secondaryColor","whiteSpace","date","ChatBubble","colorClass","elevation","toDateString","getShortDate","toTimeString","getShortTime","getShortDateTime","alignItems","textField","ChatInput","setText","setDisabled","placeholder","userTo","onSendClick","ToUserID","Text","sendMessage","multiline","rowsMax","autoFocus","newText","enterPressed","shiftHeld","shiftKey","inputContainer","chatContainer","overflow","marginBottom","chat","chatBubble","chatRight","justifyContent","chatLeft","ChatView","otherUser","otherUserFirstName","inputPlaceholder","chats","otherUserSent","senderUserId","directionClass","key","left","saveButton","avatarRow","avatarTextField","marginLeft","onSave","descChange","setDescChange","dispNameChange","setDispNameChange","dispNameError","changeObj","trim","maxLength","MARGIN","HEADER_GRADIENT","BODY_GRADIENT","PROFILE_IMG_SIZE","Account","editable","editDialogOpen","setEditDialogOpen","openEditDialog","onEditDialogCancel","onEditDialogSave","Header","align","CardMedia","image","startIcon","media","contents","subText","SongTile","albumArtUrl","album","component","CardContent","song","artist","songTile","SongList","row","index","appBar","UserView","defaultTab","chatHidden","refreshMethod","TABS_CONFIG","val","icon","SongTileList","filter","o","chatInterval","DEFAULT_TAB_INDEX","findIndex","activeTabIndex","setActiveTabIndex","activeComponent","Toolbar","textColor","Tab","tab","MatchDismissDialog","card","userView","matchesView","paddingRight","MatchesView","inMeetMode","onRefreshClick","useDismissWarningDialog","selectedTab","selectTab","selectedUserIndex","selectUserIndex","dismissDialogOpen","setDismissDialogOpen","onDismissDialogSubmit","setOnDismissDialogSubmit","selectedUser","onChatClick","closeUserView","onAddClick","rejectMethod","onDismissDialogCancel","userTiles","PROGRESS_HEIGHT","buttonProgress","initContainer","Meet","meet","matchesPresent","showMatches","setShowMatches","searching","setSearching","buttonDisabled","setButtonDisabled","success","setSuccess","finally","initComp","Check","fontSize","Intersect","textRef","setLoading","intersect","submitDisabled","textDisabled","handleSubmit","Matches","reloadMatches","refreshMatch","info","replaceAll","Date","getMessages","tabBar","float","App","TAB_CONFIG","TAB_DEFAULT","activeTab","setActiveTab","x","find","componentIndex","mainAppComp","appRef","configureStore","reducer","accountReducer","intersectReducer","meetReducer","matchesReducer","middleware","thunk","SEVERITIES","AlertNotification","setOpen","alertQueue","setAlertQueue","includes","onExited","slice","displayedAlert","alertDefaulted","restOfStr","Snackbar","autoHideDuration","AlertTitle","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.226508aa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/*\r\n * Global React context provider, allowing for any component to import the same\r\n * source data\r\n *\r\n * addAlert can be used anywhere for alert display\r\n * alert & removeAlert only intended for use in AlertNotification.jsx\r\n *\r\n * Use hooks/useAlert.jsx for simplified context import\r\n * See components/global/AlertNotification.jsx for UI component & further usage\r\n */\r\n\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nexport const AlertContext = React.createContext({\r\n  alert: null, // { title, text, severity }\r\n  addAlert: () => {},\r\n  removeAlert: () => {},\r\n})\r\n\r\nexport default function AlertProvider({ children }) {\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const addAlert = useCallback(\r\n      ({title, text, severity, type}) => setAlert({title, text, severity, type}),\r\n      []\r\n  )\r\n  const removeAlert = useCallback(() => setAlert(null), [])\r\n\r\n  const context = {\r\n    alert,\r\n    addAlert,\r\n    removeAlert,\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider value={context}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  )\r\n}\r\n","/*\r\n * Small hook for providing easier access to the global alert context\r\n * Can then be used to display alerts from any component\r\n *\r\n * See components/global/AlertNofication.jsx for UI component & usage\r\n */\r\n\r\nimport { useContext } from 'react'\r\nimport { AlertContext } from '../components/global/AlertProvider'\r\n\r\nexport default function useAlert () {\r\n  const { alert, addAlert, removeAlert } = useContext(AlertContext)\r\n  return { alert, addAlert, removeAlert }\r\n}\r\n","/*\r\n * Small wrapper for material-ui Badge component\r\n * Meant to be used on items that need attention\r\n *\r\n * Takes all the same props as a normal Badge\r\n */\r\n\r\nimport React from 'react'\r\nimport {\r\n  Badge,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nexport default function ErrorBadge (props) {\r\n  return (\r\n    <Badge\r\n      color=\"error\"\r\n      badgeContent={<Typography variant=\"body1\"><strong>!</strong></Typography>}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","/*\r\n * File containing short utility methods for use across app\r\n */\r\n\r\n// e.g. capitalize('info') = 'Info'\r\n// e.g. capitalize('the onion') = 'The Onion'\r\nexport const capitalize = (str) => {\r\n  return str.split()\r\n            .map(([firstLetter, ...restOfStr]) => firstLetter.toUpperCase() + restOfStr.join(''))\r\n            .join(' ')\r\n}\r\n\r\n// e.g. spaceCaps('HeyThere') = 'Hey There'\r\nexport const spaceCaps = (str) => {\r\n  return str.match(/[A-Z][a-z]+/g).join(' ')\r\n}\r\n\r\n// e.g. cleanEmptyKeys({nullVal: null, notNull: 3}) = {notNull: 3}\r\nexport const cleanEmptyKeys = (obj) => {\r\n  const cleaned = {...obj}\r\n  for (let k in cleaned) {\r\n    if (cleaned[k] === null || cleaned[k] === undefined)\r\n      delete cleaned[k]\r\n  }\r\n  return cleaned\r\n}\r\n\r\nexport const getShortTime = (date) => {\r\n  // Original format: [hour]:[minute]:[second] [timezone]\r\n  const re = /[0-9]+:[0-9]+/\r\n  const matches = date.toTimeString().match(re)\r\n  return matches.length > 0 ? matches[0] : '(no time)'\r\n}\r\n\r\nexport const getShortDate = (date) => {\r\n  // Original format example: Wed Jul 28 1993\r\n  const re = /.+ [0-9]+ [0-9]+/\r\n  const matches = date.toDateString().match(re)\r\n  return matches.length > 0 ? matches[0] : '(no date)'\r\n}\r\n\r\nexport const getShortDateTime = (date) => {\r\n  return `${getShortDate(date)} ${getShortTime(date)}`\r\n}\r\n\r\n// True if valid email; originally supplied by:\r\n// https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\r\nexport const checkValidEmail = (email) => {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  // TODO: Make max lengths universal in central config doc\r\n  return re.test(email.toLowerCase()) && email.length <= 254\r\n}\r\n\r\n// True if valid password\r\n// Do NOT check for symbols; UI should instead encourage long passwords\r\nexport const checkValidPassword = (password) => {\r\n  // TODO: Make lengths universal in central config doc\r\n  const re = /(.){10,128}$/\r\n  return re.test(password)\r\n}\r\n\r\n// True if valid username\r\n// Username considered valid if uses at least 5 letters, numbers, -, ., and/or _\r\nexport const checkValidUsername = (username) => {\r\n  // TODO: Make max lengths universal in central config doc\r\n  // TODO: Run different regexes and return exact error from here?\r\n  const re = /^([a-zA-Z0-9\\-_.])*$/\r\n  return re.test(username) && username.length >= 5 && username.length <= 128\r\n}\r\n","/*\r\n * Various utility methods for use in connection with the server\r\n * (NOTE: Not yet supported or used)\r\n */\r\n\r\n// const axios = require('axios')\r\nimport axios from 'axios'\r\nimport jQuery from 'jquery'\r\n\r\nimport {\r\n  checkValidUsername,\r\n  checkValidEmail,\r\n  checkValidPassword,\r\n  cleanEmptyKeys,\r\n} from './util'\r\n\r\n// Always send with credentials to ensure cookies are sent/received\r\naxios.defaults.withCredentials = true\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\n// === CONSTANTS ===\r\n\r\nconst SERVER_URL = 'http://localhost:8000'\r\n\r\nconst ENDPOINTS = {\r\n  login: ['user', 'login'],\r\n  logout: ['user', 'logout'],\r\n  signup: ['user', 'signup'],\r\n  profile: ['user', '{id}', 'profile'],\r\n  linkSpotifyAccount: ['user', 'link-account'],\r\n  checkSpotifyLinked: ['user', 'is-linked'],\r\n  getPotentialMatches: ['matching', 'potential-matches'],\r\n  getAcceptedMatches: ['matching', 'accepted-matches'],\r\n  rejectMatch: ['matching', 'reject-match'],\r\n  acceptMatch: ['matching', 'accept-match'],\r\n  messages: ['chat', 'messages?match={match_id}'],\r\n  userSongIntersection: {\r\n    byUserId: ['intersection', 'liked-songs'],\r\n    byUsername: ['intersection', 'liked-songs-by-username'],\r\n  },\r\n  syncProfilePic: ['user', 'update-profile-pic'],\r\n}\r\n\r\n// === INTERVAL(S) ===\r\n\r\nlet spotifyLinkedInterval = null\r\n\r\n// === UTIL METHODS ===\r\n\r\n// Nabs any cookie (that's not http-only) from the browser\r\n// https://stackoverflow.com/questions/50732815/how-to-use-csrf-token-in-django-restful-api-and-react\r\nconst getCookie = (name) => {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    var cookies = document.cookie.split(';');\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = jQuery.trim(cookies[i]);\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport const getCsrfToken = () => getCookie('csrftoken')\r\nexport const getSessionId = () => getCookie('sessionid')\r\n\r\n// TODO: Central \"handleResponse\" message to parse axios responses\r\n\r\n// joinUrl('www.some.link', 'sub', 'path') = 'www.some.link/sub/path'\r\nconst joinUrl = (URL, ...args) => {\r\n  return URL + (URL.endsWith('/') ? '' : '/') + args.join('/')\r\n}\r\n\r\n// getUrlQuery({key: 'value'}) = '?key=value'\r\n// NOTE: May not need\r\nconst getUrlQuery = (o) => {\r\n  return '?' + Object.keys(o).map(k => `${k}=${o[k]}`).join('&')\r\n}\r\n\r\n// === EXPORTED METHODS ===\r\n\r\nexport const getPlaylistIntersect = (userId1, userId2) => {\r\n  const query = getUrlQuery({ target: userId1, target2: userId2 })\r\n  const urlPath = joinUrl(SERVER_URL, 'polls', 'intersection', query)\r\n\r\n  return axios.get(urlPath, { mode: 'no-cors' })\r\n    .then((r) => {\r\n      return r\r\n    }).catch((e) => {\r\n      return e\r\n    })\r\n}\r\n\r\n// NOTE: Currently doesn't use email... should allow either in the future?\r\nexport const login = async ({ username, email, password }) => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.login)\r\n  const dataToSend = {\r\n    Username: username,\r\n    Password: password,\r\n  }\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then(async (r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error (`Received no data from server`)\r\n      else return {\r\n        username: r.data.username,\r\n        userId: r.data.id,\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const logout = async () => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.logout)\r\n\r\n  return axios.get(urlPath)\r\n    .then(async (r) => {\r\n      if (r.status === 204)\r\n        return\r\n      else\r\n        throw Error(`Received status ${r.status} from server`)\r\n    }).catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const signup = async ({ username, email, password }) => {\r\n  if (!checkValidUsername(username)) throw Error (`Invalid registration username: ${email}`)\r\n  if (!checkValidEmail(email)) throw Error (`Invalid registration email: ${email}`)\r\n  if (!checkValidPassword(password)) throw Error (`Invalid registration email`)\r\n\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.signup)\r\n  const defaultDisplayName = email.split('@')[0]\r\n\r\n  const dataToSend = {\r\n    Username: username,\r\n    Email: email,\r\n    Password: password,\r\n    DisplayName: defaultDisplayName,\r\n    ZipCode: null,\r\n    ProfilePicURL: null,\r\n  }\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then((r) => ({}))\r\n    .catch((e) => {\r\n      if (e.hasOwnProperty('response')) {\r\n        if (!e.response) {\r\n          const newErr = Error('Please check your connection and try again.')\r\n          newErr.name = 'CouldNotConnect'\r\n          throw newErr\r\n\r\n        } else if (e.response.status === 409) {\r\n          throw Error('Could not create account: That username is already taken!')\r\n        }\r\n      } else {\r\n        throw e\r\n      }\r\n    })\r\n}\r\n\r\nexport const getProfile = async({ userId }) => {\r\n  const baseUrl = joinUrl(SERVER_URL, ...ENDPOINTS.profile)\r\n  const urlPath = baseUrl.replace('{id}', userId)\r\n\r\n  return axios.get(urlPath)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error (`Received no profile data from server`)\r\n      else return {\r\n        displayName: r.data.DisplayName,\r\n        profilePicUrl: r.data.ProfilePicURL,\r\n        description: r.data.Description,\r\n      }\r\n    }).catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const editProfile = async({ userId, changes }) => {\r\n  const baseUrl = joinUrl(SERVER_URL, ...ENDPOINTS.profile)\r\n  const urlPath = baseUrl.replace('{id}', userId)\r\n\r\n  const {\r\n    description,\r\n    displayName,\r\n    profilePicUrl,\r\n  } = changes\r\n\r\n  const dataToSend = cleanEmptyKeys({\r\n    Description: description,\r\n    DisplayName: displayName,\r\n    ProfilePicURL: profilePicUrl,\r\n  })\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error (`Received no profile data from server`)\r\n      else return {\r\n        displayName: r.data.DisplayName,\r\n        profilePicUrl: r.data.ProfilePicURL,\r\n        description: r.data.Description,\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      if (e.hasOwnProperty('response')) {\r\n        if (!e.response) {\r\n          const newErr = Error('Please check your connection and try again.')\r\n          newErr.name = 'CouldNotConnect'\r\n          throw newErr\r\n        } else if (e.response.status === 401) {\r\n          throw Error('Could not update. Please login and try again.')\r\n        }\r\n      } else {\r\n        throw e\r\n      }\r\n    })\r\n}\r\n\r\nexport const linkSpotifyAccount = async ({ userId }) => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.linkSpotifyAccount)\r\n\r\n  return axios.get(urlPath)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error(`Received no Spotify link URL from server`)\r\n      else return {\r\n        url: r.data\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const checkSpotifyLinked = async ({ userId }) => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.checkSpotifyLinked)\r\n\r\n  return axios.get(urlPath)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data || r.data.IsLinked === null || r.data.IsLinked === undefined)\r\n        throw Error(`Received no Spotify link check from server`)\r\n      else return {\r\n        spotifyLinked: r.data.IsLinked\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\n// Gives access to two methods for repeatedly checking for Spotify link status\r\n// To be used in tandem with the link at linkSpotifyAccount()\r\nexport const waitUntilSpotifyLinked = {\r\n  start: async ({ userId }) => {\r\n    clearInterval(spotifyLinkedInterval)\r\n\r\n    let iters = 0\r\n    const maxIters = 100\r\n    const delay = 2000\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      spotifyLinkedInterval = setInterval(() => {\r\n        // Log on each iteration just to be 200% sure we stop this interval\r\n        console.log('Checking if Spotify linked...')\r\n\r\n        if (!spotifyLinkedInterval) reject('Cancelled')\r\n\r\n        checkSpotifyLinked({ userId })\r\n          .then(({spotifyLinked}) => {\r\n            if (spotifyLinked === true) {\r\n              clearInterval(spotifyLinkedInterval)\r\n              resolve({ spotifyLinked })\r\n\r\n            } else {\r\n              iters = iters + 1\r\n\r\n              if (iters > maxIters) {\r\n                clearInterval(spotifyLinkedInterval)\r\n                reject('Timed out')\r\n              }\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            clearInterval(spotifyLinkedInterval)\r\n            reject(e)\r\n          })\r\n      }, delay)\r\n    })\r\n  },\r\n  stop: () => {\r\n    clearInterval(spotifyLinkedInterval)\r\n  },\r\n}\r\n\r\n// Central point of interface for getPotentialMatches and getAcceptedMatches,\r\n// given their similarities\r\nconst getMatches = (url) => {\r\n  return axios.get(url)\r\n    .then(async (r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error(`Received no match from server`)\r\n      else {\r\n        const profiles = await Promise.all(r.data.map(m => getProfile({ userId: m['matched_with'] })))\r\n        const songs = await Promise.all(r.data.map(m => getUserSongIntersection({ userId: m['matched_with'] })))\r\n        return r.data.map((m, i) => ({\r\n          userId: m['matched_with'],\r\n          matchId: m['match_id'],\r\n          profile: profiles[i],\r\n          songs: songs[i],\r\n          messages: null,\r\n        }))\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const getPotentialMatches = () => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.getPotentialMatches)\r\n  return getMatches(urlPath)\r\n}\r\n\r\nexport const getAcceptedMatches = () => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.getAcceptedMatches)\r\n  return getMatches(urlPath)\r\n}\r\n\r\nexport const sendMessage = ({userTo, text}) => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.messages)\r\n\r\n  const dataToSend = {\r\n    ToUserID: userTo,\r\n    Text: text,\r\n  }\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else return\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const getMessages = ({ matchId }) => {\r\n  const baseUrl = joinUrl(SERVER_URL, ...ENDPOINTS.messages)\r\n  const urlPath = baseUrl.replace('{match_id}', matchId)\r\n\r\n  return axios.get(urlPath)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error(`Received no messages from server`)\r\n      else return r.data.map(m => ({\r\n        matchId: m['MatchId'],\r\n        senderUserId: m['SenderUserId'],\r\n        // Stored as plain-text encoding on server; convert to real new-lines\r\n        text: m['Text'].replaceAll('\\\\n', '\\n'),\r\n        date: new Date(m['META_StartDate']),\r\n      }))\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const rejectMatch = ({ matchId }) => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.rejectMatch)\r\n  const dataToSend = {\r\n    'match_id': matchId,\r\n  }\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else return\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const acceptMatch = ({ matchId }) => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.acceptMatch)\r\n  const dataToSend = {\r\n    'match_id': matchId,\r\n  }\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else return\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const getUserSongIntersection = ({ userId, username }) => {\r\n  const endpointKey = userId != null ? 'byUserId' : 'byUsername'\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.userSongIntersection[endpointKey])\r\n\r\n  const dataToSend = cleanEmptyKeys({\r\n    'target_user_id': userId,\r\n    'target_username': username,\r\n  })\r\n\r\n  return axios.post(urlPath, dataToSend)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else if (!r.data)\r\n        throw Error('Received no data from server')\r\n      else return Object.keys(r.data).map(k => ({...r.data[k], songId: k}))\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n\r\nexport const syncProfilePic = () => {\r\n  const urlPath = joinUrl(SERVER_URL, ...ENDPOINTS.syncProfilePic)\r\n\r\n  return axios.get(urlPath)\r\n    .then((r) => {\r\n      if (r.status >= 300)\r\n        throw Error(`Received status ${r.status} from server`)\r\n      else return\r\n    })\r\n    .catch((e) => {\r\n      throw e\r\n    })\r\n}\r\n","/*\r\n * Redux slice for containing current user account data\r\n * Should be only written to within the Login component\r\n *\r\n * Sends to state.account\r\n */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst DEFAULT_DATA = {\r\n  loggedIn: false,\r\n  username: '',\r\n  userId: -1,\r\n  spotify: {\r\n    linked: false,\r\n  },\r\n  profile: {\r\n    displayName: '',\r\n    description: '',\r\n    profilePicUrl: '',\r\n  },\r\n}\r\n\r\nexport const accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState: {\r\n    ...DEFAULT_DATA,\r\n    spotify: { ...DEFAULT_DATA.spotify },\r\n    profile: { ...DEFAULT_DATA.profile },\r\n  },\r\n  reducers: {\r\n    setLoggedIn: (state, action) => {\r\n      state.loggedIn = action.payload\r\n    },\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload\r\n    },\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload\r\n    },\r\n    setProfile: (state, action) => {\r\n      state.profile = action.payload\r\n    },\r\n    setSpotifyLinked: (state, action) => {\r\n      state.spotify.linked = action.payload\r\n    },\r\n    resetAccountData: (state, action) => {\r\n      state = {\r\n        ...DEFAULT_DATA,\r\n        spotify: { ...DEFAULT_DATA.spotify },\r\n        profile: { ...DEFAULT_DATA.profile },\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setLoggedIn,\r\n  setUsername,\r\n  setUserId,\r\n  setProfile,\r\n  setSpotifyLinked,\r\n  resetAccountData,\r\n} = accountSlice.actions\r\nexport default accountSlice.reducer\r\n","/*\r\n * Generic dialog for centrally styling form dialogs\r\n * Has a title area, contents, a cancel button, and a submit button\r\n *\r\n * Various props detailed within function itself\r\n *\r\n * Example usage:\r\n *<FormDialog\r\n *  open={true}\r\n *  title=\"My Form\"\r\n *  submitButtonText=\"Save Form\"\r\n *  onSubmit={() => handleSubmit()}\r\n *  onClose={() => handleClose()}\r\n *  onCancel={() => handleCancel()}\r\n *>\r\n *  <TextField\r\n *    label=\"My Text Field\"\r\n *    variant=\"outlined\"\r\n *  />\r\n *</FormDialog>\r\n *\r\n */\r\n\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    maxWidth: 600,\r\n    minWidth: 600,\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  cancelButton: {\r\n    color: theme.palette.error.light,\r\n  },\r\n  submitButton: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n}))\r\n\r\nexport default function EditProfileDialog(props) {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    // Booleans\r\n    open, // true if dialog should open (from Material-UI)\r\n    submitButtonDisabled,\r\n    cancelButtonDisabled,\r\n\r\n    // Method callbacks\r\n    onClose,\r\n    onCancel,\r\n    onSubmit,\r\n\r\n    // Strings\r\n    title,\r\n    submitButtonText,\r\n    cancelButtonText,\r\n\r\n    // Other\r\n    children,\r\n  } = props\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => onClose && onClose()}\r\n      maxWidth=\"lg\"\r\n    >\r\n      <AppBar position=\"static\">\r\n        <DialogTitle>\r\n          { title || 'Form Dialog' }\r\n        </DialogTitle>\r\n      </AppBar>\r\n      <DialogContent className={classes.dialogContent}>\r\n        { children }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => onCancel && onCancel()}\r\n          className={classes.cancelButton}\r\n          disabled={cancelButtonDisabled}\r\n        >\r\n          { cancelButtonText || 'Cancel' }\r\n        </Button>\r\n        <Button\r\n          onClick={() => onSubmit && onSubmit()}\r\n          className={classes.submitButton}\r\n          disabled={submitButtonDisabled}\r\n        >\r\n          { submitButtonText || 'Submit' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","/*\r\n * Dialog with fields for linking a spotify account\r\n * Connects with server in-house\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport {\r\n  linkSpotifyAccount,\r\n  waitUntilSpotifyLinked,\r\n  syncProfilePic,\r\n  getProfile,\r\n} from '../../server'\r\n\r\nimport {\r\n  setSpotifyLinked,\r\n  setProfile,\r\n} from './accountSlice'\r\n\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport FormDialog from '../FormDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    maxWidth: 600,\r\n    minWidth: 600,\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  editableMargin: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  spotifyLink: {\r\n    textDecoration: 'none'\r\n  },\r\n}))\r\n\r\nexport default function LinkSpotifyDialog(props) {\r\n  const {\r\n    open,\r\n    onCancel,\r\n    onSuccess,\r\n  } = props\r\n\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const { addAlert } = useAlert()\r\n\r\n  const userId = useSelector((state) => state.account.userId)\r\n  const spotifyLinked = useSelector((state) => state.account.spotify.linked)\r\n  const [ spotifyUrl, setSpotifyUrl ] = useState('')\r\n  const [ linkError, setLinkError ] = useState('')\r\n\r\n  // Automatically get the link from the server on dialog open\r\n  useEffect(() => {\r\n    setSpotifyUrl('')\r\n    setLinkError('')\r\n\r\n    if(open) {\r\n      linkSpotifyAccount({ userId })\r\n        .then(({ url }) => {\r\n          setSpotifyUrl(url)\r\n        })\r\n        .catch((e) => {\r\n          const head = 'Can\\'t link:'\r\n          if (e && e.message) setLinkError(`${head} ${e.message}`)\r\n          else if (typeof(e) === 'string') setLinkError(`${head} ${e}`)\r\n          else setLinkError(`${head} Unknown error occurred`)\r\n        })\r\n    }\r\n  }, [open, userId])\r\n\r\n  const onLinkButtonClick = () => {\r\n    waitUntilSpotifyLinked.start({ userId })\r\n      .then(({ spotifyLinked }) => {\r\n        dispatch(setSpotifyLinked(spotifyLinked))\r\n        addAlert({\r\n          severity: 'success',\r\n          text: 'Your Spotify account has been linked! You can now use the Meetify services.',\r\n          type: 'snackbar',\r\n        })\r\n\r\n        // Attempt to update profile, but don't error entire process if not needed\r\n        return syncProfilePic()\r\n          .then(() => getProfile({ userId }))\r\n          .then((profile) => {\r\n            dispatch(setProfile(profile))\r\n          })\r\n          .catch((e) => {\r\n            console.error(e)\r\n            addAlert({\r\n              severity: 'warning',\r\n              text: 'Your Spotify account has been linked, but we could not retrieve your profile picture.',\r\n              type: 'snackbar',\r\n            })\r\n          })\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        addAlert({\r\n          severity: 'error',\r\n          text: 'Spotify linkage timed out; please try again!',\r\n          type: 'snackbar',\r\n        })\r\n      })\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    onSuccess()\r\n  }\r\n\r\n  const onDialogCancel = () => {\r\n    waitUntilSpotifyLinked.stop()\r\n    if (spotifyLinked) onSuccess && onSuccess()\r\n    else onCancel && onCancel()\r\n  }\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Spotify Account Link\"\r\n      submitButtonText=\"Continue\"\r\n      submitButtonDisabled={!spotifyLinked}\r\n      cancelButtonDisabled={spotifyLinked}\r\n      onSubmit={onSubmit}\r\n      onClose={onDialogCancel}\r\n      onCancel={onDialogCancel}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        To use <strong>Meetify</strong>, we will need some basic info from your\r\n        Spotify account.<br/>\r\n        <em>(You can always do this later from within the app!)</em>\r\n      </Typography>\r\n\r\n      { linkError &&\r\n        <Alert className={classes.editableMargin} severity=\"error\">\r\n          {linkError}\r\n        </Alert>\r\n      }\r\n\r\n      { !linkError &&\r\n        <a\r\n          className={classes.spotifyLink}\r\n          href={spotifyUrl}\r\n\r\n          /* Allow it to be opened in new window/tab */\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <Button\r\n            fullWidth\r\n            onClick={onLinkButtonClick}\r\n            className={classes.editableMargin}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            disabled={!spotifyUrl || spotifyLinked}\r\n          >\r\n            { (!spotifyUrl && <CircularProgress size={26} thickness={5}/>) ||\r\n              (spotifyLinked && \"Complete!\") ||\r\n              \"Link Account\"}\r\n          </Button>\r\n        </a>\r\n      }\r\n    </FormDialog>\r\n  )\r\n}\r\n","/*\r\n * Redux slice for the Intersect component, caching the data in case of unmount\r\n * and handling server interactions\r\n * (NOTE: Currently just uses test data)\r\n *\r\n * Sends to state.intersect\r\n */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const intersectSlice = createSlice({\r\n  name: 'account',\r\n  initialState: {\r\n    username: '',\r\n    songs: [],\r\n  },\r\n  reducers: {\r\n    setIntersectUsername: (state, action) => {\r\n      state.username = action.payload\r\n    },\r\n    setSongs: (state, action) => {\r\n      state.songs = action.payload\r\n    },\r\n    resetIntersectData: state => {\r\n      state = { username: '', songs: [] }\r\n    },\r\n  }\r\n})\r\n\r\nexport const { setIntersectUsername, setSongs, resetIntersectData } = intersectSlice.actions\r\nexport default intersectSlice.reducer\r\n","\r\n/*\r\n * Redux slice for containing data for the Matches tab\r\n * (NOTE: Currently just uses test data)\r\n *\r\n * Sends to state.matches\r\n */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst matchesSlice = createSlice({\r\n  name: 'matches',\r\n  initialState: {\r\n    // Array of dicts containing { displayname, profilePicUrl, songsMatched }\r\n    matches: []\r\n  },\r\n  reducers: {\r\n    setMatches: (state, action) => {\r\n      state.matches = action.payload\r\n    },\r\n    clearMatches: state => {\r\n      state.matches = []\r\n    },\r\n    setMessages: (state, action) => {\r\n      const { matchId, messages } = action.payload\r\n      state.matches = state.matches.map((m) => m.matchId !== matchId ? m : {...m, messages})\r\n    },\r\n    resetMatchesData: state => {\r\n      state.matches = []\r\n    },\r\n  }\r\n})\r\n\r\nexport { matchesSlice }\r\nexport const { setMatches, clearMatches, setMessages, resetMatchesData } = matchesSlice.actions\r\nexport default matchesSlice.reducer\r\n","\r\n/*\r\n * Redux slice for containing data for the Meet tab\r\n * (NOTE: Currently just uses test data)\r\n *\r\n * Sends to state.meet\r\n */\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst meetSlice = createSlice({\r\n  name: 'meet',\r\n  initialState: {\r\n    // Array of dicts containing { displayname, profilePicUrl, songsMatched }\r\n    matches: [],\r\n  },\r\n  reducers: {\r\n    setMatches: (state, action) => {\r\n      state.matches = action.payload\r\n    },\r\n    clearMatches: state => {\r\n      state.matches = []\r\n    },\r\n  }\r\n})\r\n\r\nexport { meetSlice }\r\nexport const { setMatches, clearMatches } = meetSlice.actions\r\nexport default meetSlice.reducer\r\n","/*\r\n * Form dialog for handling account logout\r\n * Sends actions directly to store\r\n */\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport { logout } from '../../server'\r\nimport { setLoggedIn, resetAccountData } from './accountSlice'\r\nimport { resetIntersectData } from '../intersect/intersectSlice'\r\nimport { resetMatchesData } from '../matches/matchesSlice'\r\nimport { clearMatches as resetMeetData } from '../meet/meetSlice'\r\n\r\nimport {\r\n  // Button,\r\n  // CircularProgress,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport FormDialog from '../FormDialog'\r\n\r\nexport default function LogoutDialog (props) {\r\n  const dispatch = useDispatch()\r\n  const { addAlert } = useAlert()\r\n\r\n  const {\r\n    open,\r\n    onCancel,\r\n    onSuccess,\r\n  } = props\r\n\r\n  const onSubmit = () => {\r\n    logout()\r\n      .then(() => {\r\n        dispatch(setLoggedIn(false))\r\n\r\n        dispatch(resetAccountData())\r\n        dispatch(resetIntersectData())\r\n        dispatch(resetMatchesData())\r\n        dispatch(resetMeetData())\r\n\r\n        onSuccess && onSuccess()\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not log out. Please try again.'\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Account Logout\"\r\n      submitButtonText=\"Logout\"\r\n      onSubmit={onSubmit}\r\n      onClose={() => { onCancel && onCancel() }}\r\n      onCancel={() => { onCancel && onCancel() }}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        Are you sure you want to log out?\r\n      </Typography>\r\n    </FormDialog>\r\n  )\r\n}\r\n","/*\r\n * Icon for the Spotify program\r\n * Written to be compatible with other material-ui icons\r\n *\r\n * Sourced from SVG at public/SpotifyIcon.svg\r\n * Icon art from Freepik at:\r\n * https://www.flaticon.com/free-icon/spotify_174872?term=spotify&page=1&position=2&page=1&position=2&related_id=174872&origin=tag\r\n */\r\n\r\nimport React from 'react'\r\nimport { SvgIcon } from '@material-ui/core'\r\n\r\nexport default function SpotifyIcon (props) {\r\n  return (\r\n    <SvgIcon\r\n      {...props}\r\n      viewBox=\"0 0 427.652 427.652\"\r\n    >\r\n      <path\r\n        style={{fill:'#00D95F'}}\r\n        d=\"M213.826,0C95.733,0,0,95.733,0,213.826s95.733,213.826,213.826,213.826 s213.826-95.733,213.826-213.826S331.919,0,213.826,0z M306.886,310.32c-2.719,4.652-7.612,7.246-12.638,7.247 c-2.506,0-5.044-0.645-7.364-2c-38.425-22.456-82.815-26.065-113.295-25.138c-33.763,1.027-58.523,7.692-58.769,7.76 c-7.783,2.126-15.826-2.454-17.961-10.236c-2.134-7.781,2.43-15.819,10.209-17.962c1.116-0.307,27.76-7.544,64.811-8.766 c21.824-0.72,42.834,0.801,62.438,4.52c24.83,4.71,47.48,12.978,67.322,24.574C308.612,294.393,310.96,303.349,306.886,310.32z M334.07,253.861c-3.22,5.511-9.016,8.583-14.97,8.584c-2.968,0-5.975-0.763-8.723-2.369c-45.514-26.6-98.097-30.873-134.2-29.776 c-39.994,1.217-69.323,9.112-69.614,9.192c-9.217,2.515-18.746-2.906-21.275-12.124c-2.528-9.218,2.879-18.738,12.093-21.277 c1.322-0.364,32.882-8.937,76.77-10.384c25.853-0.852,50.739,0.949,73.96,5.354c29.412,5.58,56.241,15.373,79.744,29.108 C336.115,234.995,338.897,245.603,334.07,253.861z M350.781,202.526c-3.641,0-7.329-0.936-10.7-2.906 c-108.207-63.238-248.572-25.643-249.977-25.255c-11.313,3.117-23.008-3.527-26.124-14.839 c-3.117-11.312,3.527-23.008,14.839-26.124c1.621-0.447,40.333-10.962,94.166-12.737c31.713-1.044,62.237,1.164,90.72,6.567 c36.077,6.844,68.987,18.856,97.815,35.704c10.13,5.92,13.543,18.931,7.623,29.061C365.193,198.757,358.084,202.526,350.781,202.526 z\"\r\n      />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","/*\r\n * UI component for containing the app's tab bar\r\n * Tabs themselves should be managed in parent\r\n */\r\n\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useAlert from '../hooks/useAlert'\r\n\r\nimport {\r\n  Paper,\r\n  Tabs,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport ErrorBadge from './ErrorBadge'\r\nimport LinkSpotifyDialog from './account/LinkSpotifyDialog'\r\nimport LogoutDialog from './account/LogoutDialog'\r\n\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp'\r\nimport AccountIcon from '@material-ui/icons/AccountCircle'\r\nimport SpotifyIcon from './icons/SpotifyIcon'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  tabs: {\r\n    flexGrow: 1,\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    borderColor: theme.palette.text.disabled,\r\n  },\r\n  logoutButton: {\r\n    color: theme.palette.error.light\r\n  },\r\n}))\r\n\r\nexport default function VerticalTabBar (props) {\r\n  const classes = useStyles()\r\n  const { addAlert } = useAlert()\r\n\r\n  const {\r\n    children,     // tabs\r\n    activeIndex,  // index of currently active tab\r\n  } = props\r\n\r\n  const spotifyLinked = useSelector(state => state.account.spotify.linked)\r\n  const [ linkSpotifyDialogOpen, setLinkSpotifyDialogOpen ] = useState(false)\r\n  const [ logoutDialogOpen, setLogoutDialogOpen ] = useState(false)\r\n\r\n  const onSpotifyClick = () => {\r\n    if (!spotifyLinked) {\r\n      setLinkSpotifyDialogOpen(true)\r\n    } else {\r\n      addAlert({\r\n        severity: 'info',\r\n        text: 'Spotify account already linked!',\r\n        type: 'snackbar',\r\n      })\r\n    }\r\n  }\r\n\r\n  const onLinkSpotifySuccess = () => {\r\n    setLinkSpotifyDialogOpen(false)\r\n  }\r\n  const onLinkSpotifyCancel = () => {\r\n    setLinkSpotifyDialogOpen(false)\r\n  }\r\n\r\n  const onLogoutClick = () => {\r\n    setLogoutDialogOpen(true)\r\n  }\r\n\r\n  const onLogoutCancel = () => {\r\n    setLogoutDialogOpen(false)\r\n  }\r\n  const onLogoutSuccess = () => {\r\n    setLogoutDialogOpen(false)\r\n    addAlert({\r\n      severity: 'success',\r\n      text: 'You are now logged out from Meetify.',\r\n      type: 'snackbar',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        className={classes.root}\r\n        square\r\n      >\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={activeIndex || 0}\r\n        >\r\n          { children }\r\n        </Tabs>\r\n\r\n        <div><hr className={classes.divider}/></div>\r\n\r\n        <div className={classes.buttons}>\r\n          <IconButton\r\n            className={classes.logoutButton}\r\n            onClick={onLogoutClick}\r\n          >\r\n            <LogoutIcon/>\r\n          </IconButton>\r\n\r\n          <IconButton onClick={onSpotifyClick}>\r\n            <ErrorBadge\r\n              overlap=\"circle\"\r\n              invisible={spotifyLinked}\r\n            >\r\n              <SpotifyIcon/>\r\n            </ErrorBadge>\r\n          </IconButton>\r\n\r\n          <IconButton><AccountIcon/></IconButton>\r\n        </div>\r\n      </Paper>\r\n\r\n      <LinkSpotifyDialog\r\n        open={linkSpotifyDialogOpen}\r\n        onSuccess={onLinkSpotifySuccess}\r\n        onCancel={onLinkSpotifyCancel}\r\n      />\r\n      <LogoutDialog\r\n        open={logoutDialogOpen}\r\n        onSuccess={onLogoutSuccess}\r\n        onCancel={onLogoutCancel}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","/*\r\n * Dialog with fields for creating a new user account a user's profile\r\n * Communicates with server in-house\r\n *\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { signup } from '../../server'\r\nimport useAlert from '../../hooks/useAlert'\r\nimport {\r\n  checkValidEmail,\r\n  checkValidPassword,\r\n  checkValidUsername,\r\n  spaceCaps,\r\n} from '../../util'\r\n\r\nimport {\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport FormDialog from '../FormDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    maxWidth: 600,\r\n    minWidth: 600,\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  editableMargin: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  hintText: {\r\n    color: theme.palette.text.hint\r\n  },\r\n}))\r\n\r\nexport default function CreateAccountDialog(props) {\r\n  const {\r\n    open,      // True if dialog open\r\n    onCancel,  // Method to call on user cancel\r\n    onSuccess, // Method to call on successful account creation\r\n  } = props\r\n\r\n  const classes = useStyles()\r\n  const [ username, setUsername ] = useState('')\r\n  const [ email, setEmail ] = useState('')\r\n  const [ password, setPassword ] = useState('')\r\n  const [ passwordRepeat, setPasswordRepeat ] = useState('')\r\n\r\n  // Monitor if user has changed a field so we don't report errors for doing nothing\r\n  const [ usernameChanged, setUsernameChanged ] = useState(false)\r\n  const [ emailChanged, setEmailChanged ] = useState(false)\r\n  const [ passwordChanged, setPasswordChanged ] = useState(false)\r\n  const [ passwordRepeatChanged, setPasswordRepeatChanged ] = useState(false)\r\n\r\n  const { addAlert } = useAlert()\r\n\r\n  // Central location for field errors\r\n  // If there's an error, should be set to error reason. Otherwise should be false\r\n  const usernameError = usernameChanged &&\r\n        (!checkValidUsername(username) && 'Username must be at least 5 letters, numbers, and/or allowed symbols')\r\n  const emailError = emailChanged &&\r\n        (!checkValidEmail(email) && 'Invalid email')\r\n  const passwordError = passwordChanged &&\r\n        (!checkValidPassword(password) && 'Password must be at least 10 characters')\r\n  const passwordRepeatError = passwordRepeatChanged &&\r\n        (password !== passwordRepeat && 'Passwords must match')\r\n\r\n  const submitButtonDisabled =\r\n        !username || !email || !password || !passwordRepeat ||\r\n        !!usernameError || !!emailError || !!passwordError || !!passwordRepeatError\r\n\r\n  // Reset any previous changes when opening\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setUsername('')\r\n      setEmail('')\r\n      setPassword('')\r\n      setPasswordRepeat('')\r\n\r\n      setUsernameChanged(false)\r\n      setEmailChanged(false)\r\n      setPasswordChanged(false)\r\n      setPasswordRepeatChanged(false)\r\n    }\r\n  }, [open])\r\n\r\n  const onSubmit = () => {\r\n    signup({username, email, password,})\r\n      .then(() => {\r\n        onSuccess && onSuccess()\r\n      })\r\n      .catch((e) => {\r\n        addAlert({\r\n          text: e.message || e,\r\n          title: (e.name && spaceCaps(e.name)) || null,\r\n          type: 'dialog',\r\n          severity: 'error',\r\n        })\r\n\r\n        // Don't clear password if just a connection issue\r\n        if (!e.name || e.name !== 'CouldNotConnect') {\r\n          setPassword('')\r\n          setPasswordRepeat('')\r\n          setPasswordChanged(false)\r\n          setPasswordRepeatChanged(false)\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Create Account\"\r\n      submitButtonText=\"Create Account\"\r\n      submitButtonDisabled={submitButtonDisabled}\r\n      onSubmit={() => onSubmit()}\r\n      onClose={() => onCancel && onCancel()}\r\n      onCancel={() => onCancel && onCancel()}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        Welcome to <strong>Meetify</strong>! Before you start meeting people, we\r\n        just need some basic info...\r\n      </Typography>\r\n\r\n      <TextField\r\n        className={classes.editableMargin}\r\n        label=\"Username\"\r\n        variant=\"outlined\"\r\n        error={!!usernameError}\r\n        helperText={usernameError}\r\n        fullWidth\r\n        required\r\n        value={username}\r\n        onChange={(e) => {setUsername(e.target.value); setUsernameChanged(true)}}\r\n        inputProps={{spellCheck: false}}\r\n      />\r\n\r\n      <TextField\r\n        className={classes.editableMargin}\r\n        label=\"Email Address\"\r\n        variant=\"outlined\"\r\n        error={!!emailError}\r\n        helperText={emailError}\r\n        fullWidth\r\n        required\r\n        value={email}\r\n        onChange={(e) => {setEmail(e.target.value); setEmailChanged(true)}}\r\n        inputProps={{spellCheck: false}}\r\n      />\r\n\r\n      <Typography variant=\"body1\" className={`${classes.editableMargin} ${classes.hintText}`}>\r\n        We don't have restrictions on what's in your password, but <strong>make\r\n        it long!</strong> Password length is what really keeps you secure.\r\n\r\n        <br/><br/>\r\n\r\n        <strong>Our tip:</strong> Try a unique but easy-to-remember sentence, such as:<br/>\r\n        <em>\"Timetomeet42greatnewfriends!\"</em>\r\n      </Typography>\r\n\r\n      <TextField\r\n        className={classes.editableMargin}\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        error={!!passwordError}\r\n        helperText={passwordError}\r\n        fullWidth\r\n        required\r\n        value={password}\r\n        onChange={(e) => {setPassword(e.target.value); setPasswordChanged(true)}}\r\n      />\r\n      <TextField\r\n        className={classes.editableMargin}\r\n        label=\"Confirm Password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        error={!!passwordRepeatError}\r\n        helperText={passwordRepeatError}\r\n        fullWidth\r\n        required\r\n        value={passwordRepeat}\r\n        onChange={(e) => {setPasswordRepeat(e.target.value); setPasswordRepeatChanged(true)}}\r\n      />\r\n    </FormDialog>\r\n  )\r\n}\r\n","/*\r\n * A basic wrapper to material ui's CircularProgress\r\n * Intended for centralized style for use in buttons when they are loading\r\n */\r\n\r\nimport React from 'react'\r\nimport {\r\n  CircularProgress\r\n} from '@material-ui/core'\r\n\r\nexport default function ButtonProgress (props) {\r\n  return (\r\n    <CircularProgress\r\n      size={24}\r\n      thickness={4.6}\r\n    />\r\n  )\r\n}\r\n","/*\r\n * Material UI theme and relevant utilities to use across the app\r\n *\r\n * Color customization:\r\n * https://material-ui.com/customization/color/\r\n *\r\n * All potential theme fields:\r\n * https://material-ui.com/customization/default-theme/\r\n */\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red'\r\nimport pink from '@material-ui/core/colors/pink'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#4ac776',\r\n      main: '#1DB954',\r\n      dark: '#14813a',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: pink[300],\r\n      main: pink[400],\r\n      dark: pink[500],\r\n      contrastText: '#000',\r\n    },\r\n    gray: {\r\n      light: '#474343',\r\n      main: '#191414',\r\n      dark: '#110e0e',\r\n      contrastText: '#000',\r\n    },\r\n    error: {\r\n      light: red[300],\r\n      main: red[400],\r\n      dark: red[500],\r\n    },\r\n  },\r\n  tile: {\r\n    height: '135px',\r\n  },\r\n  images: {\r\n    squareImageHeight: '150px',\r\n    cardImageHeight: '100px',\r\n  },\r\n})\r\n\r\nconst defaultOpts = {\r\n  deg: '90deg',\r\n}\r\n\r\ntheme.getGradient = (colors, opts) => {\r\n  if (!opts) opts = {}\r\n  const optsWithDefaults = Object.assign({}, defaultOpts, opts)\r\n\r\n  if (colors.length === 0)\r\n    return 'rgba(0, 0, 0, 0)'\r\n  else if (colors.length === 1)\r\n    return colors[0]\r\n  else if (colors.length === 2)\r\n    return `linear-gradient(${optsWithDefaults.deg}, ${colors[0]} 16%, ${colors[1]} 77%`\r\n  else\r\n    return `linear-gradient(${optsWithDefaults.deg}, ${colors[0]} 16%, ${colors[1]} 77%, ${colors[2]} 100%)`\r\n}\r\n\r\nexport { theme }\r\nexport default theme\r\n","/*\r\n * UI component for the opening login screen w/ welcome animation\r\n */\r\n\r\nimport React, { useState, useEffect, useRef, useCallback, } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nimport CreateAccountDialog from './CreateAccountDialog'\r\nimport ButtonProgress from '../ButtonProgress'\r\n\r\nimport {\r\n  login,\r\n  getProfile,\r\n  checkSpotifyLinked,\r\n  syncProfilePic,\r\n} from '../../server'\r\nimport {\r\n  setUsername,\r\n  setUserId,\r\n  setLoggedIn,\r\n  setProfile,\r\n  setSpotifyLinked,\r\n} from './accountSlice'\r\n\r\nimport { theme } from '../../theme'\r\n\r\nconst TRANSITION_DURATION = 500\r\nconst WELCOME_DURATION = 2000\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  registerButton: {\r\n    color: theme.palette.secondary.light\r\n  },\r\n}))\r\n\r\nexport default function Login (props) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const passwordRef = useRef(null)\r\n\r\n  const { addAlert } = useAlert()\r\n\r\n  const username = useSelector(state => state.account.username)\r\n  const displayName = useSelector(state => state.account.profile.displayName)\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [loginVisible, setLoginVisible] = useState(true)\r\n  const [welcomeVisible, setWelcomeVisible] = useState(false)\r\n  const [timeoutVar, setTimeoutVar] = useState(null)\r\n\r\n  const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n  const [createDialogOpen, setCreateDialogOpen] = useState(false)\r\n\r\n  const onLoginClick = useCallback(async () => {\r\n    setLoginLoading(true)\r\n\r\n    login({ username, password })\r\n\r\n      .then(async ({ username, userId }) => {\r\n       // Set basic account info in store\r\n        dispatch(setUsername(username))\r\n        dispatch(setUserId(userId))\r\n\r\n        // We're now logged in; get any remaining related info\r\n        const { spotifyLinked } = await checkSpotifyLinked ({ userId })\r\n        dispatch(setSpotifyLinked(spotifyLinked))\r\n\r\n        if (spotifyLinked) {\r\n          await syncProfilePic()\r\n        }\r\n\r\n        const profile = await getProfile({ userId })\r\n        dispatch(setProfile(profile))\r\n\r\n        return\r\n      })\r\n\r\n      // Trigger login animation chain\r\n      .then(() => {\r\n        setLoginLoading(false)\r\n        setLoginVisible(false)\r\n      })\r\n\r\n      .catch((e) => {\r\n        console.error(e)\r\n        addAlert({text: 'Invalid username or password',\r\n                  type: 'snackbar',\r\n                  severity: 'error'})\r\n        setPassword('')\r\n        setLoginLoading(false)\r\n      })\r\n  }, [dispatch, addAlert, password, username, setLoginLoading])\r\n\r\n  // Login and welcome transition handling\r\n  useEffect(() => {\r\n    if (loginVisible === false) setWelcomeVisible(true)\r\n  }, [loginVisible])\r\n  useEffect(() => {\r\n    if (welcomeVisible === true) {\r\n      setTimeoutVar(setTimeout(() => {\r\n        dispatch(setLoggedIn(true))\r\n      }, TRANSITION_DURATION + WELCOME_DURATION))\r\n    }\r\n  }, [welcomeVisible, dispatch])\r\n\r\n  // Cleanup timeout on destroy, just in case\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearTimeout(timeoutVar)\r\n    }\r\n  })\r\n\r\n  const onRegisterClick = () => setCreateDialogOpen(true)\r\n  const onRegisterSuccess = useCallback(() => {\r\n    addAlert({\r\n      text: 'Account successfully created!',\r\n      severity: 'success',\r\n      type: 'snackbar',\r\n    })\r\n    setCreateDialogOpen(false)\r\n  }, [ addAlert, setCreateDialogOpen ])\r\n\r\n  const onPassKeypress = useCallback((e) => {\r\n    const enterPressed = e.keyCode === 13\r\n    if (enterPressed) onLoginClick()\r\n  }, [onLoginClick])\r\n\r\n  const onUsernameKeypress = useCallback((e) => {\r\n    const enterPressed = e.keyCode === 13\r\n    if (enterPressed) passwordRef.current.focus()\r\n  }, [passwordRef])\r\n\r\n  // TODO: Move these to material-ui's makeStyle syntax\r\n  const gridItemStyle = { textAlign: 'center', paddingBottom: '10px' }\r\n\r\n  // Login component, where user enters username and password\r\n  const loginComp = (\r\n    <>\r\n      <Grid item style={gridItemStyle}>\r\n        <Typography variant='subtitle1' style={{color: theme.palette.text.hint}}>\r\n          Welcome to\r\n        </Typography>\r\n        <Typography variant='h3'>\r\n          Meetify\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item style={gridItemStyle} xs={12}>\r\n        <TextField\r\n          label=\"Username\"\r\n          value={username}\r\n          onChange={(e) => dispatch(setUsername(e.target.value))}\r\n          onKeyDown={onUsernameKeypress}\r\n          disabled={loginLoading}\r\n        />\r\n      </Grid>\r\n      <Grid item style={gridItemStyle} xs={12}>\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          inputRef={passwordRef}\r\n          autoComplete=\"current-password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          onKeyDown={onPassKeypress}\r\n          disabled={loginLoading}\r\n        />\r\n      </Grid>\r\n      <Grid item style={gridItemStyle} xs={12}>\r\n        <Button\r\n          disableElevation\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onLoginClick}\r\n          disabled={loginLoading}\r\n        >\r\n          {loginLoading ?\r\n          <ButtonProgress/> :\r\n          \"Login\"\r\n          }\r\n        </Button>\r\n      </Grid>\r\n      {/* TODO: Could add nice lilttle divider, but would need to mess with CSS */}\r\n      {/* <Grid item style={gridItemStyle} xs={12}> */}\r\n      {/*   <Divider/> */}\r\n      {/* </Grid> */}\r\n      <Grid item style={gridItemStyle} xs={12}>\r\n        <Button\r\n          disableElevation\r\n          color=\"secondary\"\r\n          onClick={onRegisterClick}\r\n          className={classes.registerButton}\r\n          disabled={loginLoading}\r\n        >\r\n          Register\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  )\r\n\r\n  // Basic component where user is welcomed\r\n  const welcomeComp = (\r\n    <>\r\n      <Grid item style={gridItemStyle}>\r\n        <Typography variant='h3'>\r\n          Welcome, {displayName || username || 'user'}\r\n        </Typography>\r\n      </Grid>\r\n    </>\r\n  )\r\n\r\n  const loginRef = useRef(null)\r\n  const welcomeRef = useRef(null)\r\n\r\n  // Return final result with transitions prepped between login and welcome screen\r\n  // Note that weird \"absolute\" / \"relative\" interactions allow for\r\n  // transitions to happen on top of each other\r\n  return (\r\n    <div\r\n      style={{height: '100%', width: '100%', position: 'absolute'}}\r\n    >\r\n      {/* TODO: Would be nice to make this concise with common component, but\r\n                CSSTransition doesn't seem to like using \"in\" from a prop */}\r\n      <CSSTransition\r\n        classNames=\"fade\"\r\n        timeout={TRANSITION_DURATION}\r\n        unmountOnExit\r\n        style={{position: 'absolute', height: '100%', width: '100%'}}\r\n        nodeRef={loginRef}\r\n        in={loginVisible}\r\n      >\r\n        <Grid\r\n          style={{height: '100%', width: '100%', position: 'relative'}}\r\n          justify=\"center\"\r\n          alignContent=\"center\"\r\n          container\r\n          ref={loginRef}\r\n        >\r\n          {loginComp}\r\n        </Grid>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        classNames=\"fade\"\r\n        timeout={TRANSITION_DURATION}\r\n        unmountOnExit\r\n        style={{position: 'absolute', height: '100%', width: '100%'}}\r\n        nodeRef={welcomeRef}\r\n        in={welcomeVisible}\r\n      >\r\n        <Grid\r\n          style={{height: '100%', width: '100%', position: 'relative'}}\r\n          justify=\"center\"\r\n          alignContent=\"center\"\r\n          container\r\n          ref={welcomeRef}\r\n        >\r\n          {welcomeComp}\r\n        </Grid>\r\n      </CSSTransition>\r\n\r\n      <CreateAccountDialog\r\n        open={createDialogOpen}\r\n        onSuccess={onRegisterSuccess}\r\n        onCancel={() => setCreateDialogOpen(false)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport ButtonProgress from './ButtonProgress'\r\n\r\n// TODO: De-couple with each other, centering progress on button\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(1) + 12,\r\n  }\r\n}))\r\n\r\nexport default function RefreshButton (props) {\r\n  const classes = useStyles()\r\n  const { loading, ...buttonProps} = props\r\n\r\n  const activeComp = (loading && (\r\n    <div className={classes.progress}>\r\n      <ButtonProgress/>\r\n    </div>\r\n  )) || (\r\n    <IconButton\r\n      aria-label=\"refresh\"\r\n      {...buttonProps}\r\n      className={classes.button}\r\n    >\r\n      <RefreshIcon/>\r\n    </IconButton>\r\n  )\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      { activeComp }\r\n    </div>\r\n  )\r\n}\r\n","/*\r\n * Basic wrapper for the Material UI \"Avatar\" component\r\n * Displays given user's profile picture\r\n *\r\n * If no profile picture given, defaults to the first letter of their display name\r\n * If no display name, defaults to a basic profile picture\r\n *\r\n * Props:\r\n * - displayName (String) = display name of the user\r\n * - src (String) = image URL of the profile picture (should be square!)\r\n * - All other props for the Avatar component\r\n */\r\n\r\nimport React from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\n\r\nexport default function UserAvatar (props) {\r\n  if (!props) props = {}\r\n\r\n  // Pull out className for application to base img object within Avatar\r\n  // This allows for app to automatically figure out width based on image height\r\n  // NOTE: The intended look relies on a given src and a square image\r\n  //       If we want to support tiles having letters and defaults, we need to\r\n  //       Hard-code heights and widths somewhere.\r\n  const { className } = props\r\n  const imgProps = className ? {className} : {}\r\n\r\n  const { displayName, ...avatarProps } = props\r\n  const firstLetter = displayName ? displayName[0].toUpperCase() : undefined\r\n\r\n  return (\r\n    <Avatar {...avatarProps} imgProps={imgProps}>\r\n      {firstLetter}\r\n    </Avatar>\r\n  )\r\n}\r\n","/*\r\n * Component for a single tile containing basic information and actions\r\n * Contains 3 actionable areas:\r\n * - \"close\" button\r\n * - \"songs\" button\r\n * - \"action\" button (variant chat or add person button)\r\n * - \"profile\" action area\r\n *\r\n * However, event handling must be controlled from parent\r\n *\r\n * props:\r\n * - closeButtonDisabled, songButtonDisabled, actionButtonDisabled\r\n *     - [Boolean] if true, respective button is grayed and cannot be clicked\r\n * - actionButtonIcon\r\n *     - [React component] Material UI icon to display for the action button\r\n * - onCloseClick, onSongsClick, onActionClick, onProfileClick\r\n *     - [function] method to call upon clicking that particular area\r\n *\r\n */\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardHeader,\r\n  IconButton,\r\n} from '@material-ui/core'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport SongsIcon from '@material-ui/icons/LibraryMusic'\r\n\r\nimport UserAvatar from './UserAvatar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  refresh: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 0,\r\n    // TODO: Re-define here and de-couple margin from refresh button\r\n    // margin: theme.spacing(1),\r\n  },\r\n  closeButton: {\r\n    color: theme.palette.error.light,\r\n    marginRight: 'auto',\r\n  },\r\n}))\r\n\r\nfunction UserTileActions(props) {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    closeButtonDisabled, onCloseClick,\r\n    songButtonDisabled, onSongsClick,\r\n    actionButtonDisabled, onActionClick,\r\n    actionButtonIcon,\r\n  } = props\r\n\r\n  return (\r\n    <CardActions disableSpacing>\r\n      <IconButton\r\n        className={classes.closeButton}\r\n        onClick={onCloseClick}\r\n        disabled={closeButtonDisabled}\r\n      >\r\n        <CloseIcon/>\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={onSongsClick}\r\n        disabled={songButtonDisabled}\r\n      >\r\n        <SongsIcon/>\r\n      </IconButton>\r\n      <IconButton\r\n        color=\"primary\"\r\n        onClick={onActionClick}\r\n        disabled={actionButtonDisabled}\r\n      >\r\n        {actionButtonIcon}\r\n      </IconButton>\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nconst MemoizedUserTileActions = React.memo(UserTileActions)\r\n\r\nexport default function UserTile (props) {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    user,\r\n    closeButtonDisabled, onCloseClick,\r\n    songButtonDisabled, onSongsClick,\r\n    actionButtonDisabled, onActionClick,\r\n    actionButtonIcon,\r\n    onProfileClick,\r\n    className,\r\n    ...cardProps\r\n  } = props\r\n\r\n  const actionAreaProps = {\r\n    closeButtonDisabled, onCloseClick,\r\n    songButtonDisabled, onSongsClick,\r\n    actionButtonDisabled, onActionClick, // TODO: Refactor to \"actionButton\" with variant icons\r\n    actionButtonIcon,\r\n  }\r\n\r\n  // TODO: Use memoize to possibly remedy performance issues\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Card className={classes.root} raised {...cardProps}>\r\n        <CardActionArea onClick={onProfileClick}>\r\n          <CardHeader\r\n            avatar={\r\n              <UserAvatar src={user.profile.profilePicUrl} displayName={user.profile.displayName}/>\r\n            }\r\n            title={user.profile.displayName}\r\n          />\r\n        </CardActionArea>\r\n        <MemoizedUserTileActions\r\n          {...actionAreaProps}\r\n        />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","/*\r\n * Replacement for setInterval for utilizing async functions, waiting for the\r\n * previous iteration to finish before running again\r\n *\r\n * Has same interaction as setInterval, e.g.:\r\n *   import { setAsyncInterval, clearAsyncInterval } from './asyncInterval'\r\n *   const interval = setAsyncInterval(myFunc, 1000)\r\n *   clearAsyncInterval(interval)\r\n */\r\n\r\nexport const setAsyncInterval = (func, ms) => {\r\n  const intervalObj = {\r\n    run: true,\r\n    ref: null,\r\n  }\r\n\r\n  const intervalMethod = async () => {\r\n    // \"run\" key makes sure that no timing issues can happen causing\r\n    // clearTimeout to not happen\r\n    if (!intervalObj.run) return\r\n\r\n    func()\r\n      .then(() => {\r\n        intervalObj.ref = setTimeout(intervalMethod, ms)\r\n      })\r\n      .catch(() => {\r\n        clearAsyncInterval(intervalObj)\r\n      })\r\n  }\r\n\r\n  intervalMethod()\r\n  return intervalObj\r\n}\r\n\r\nexport const clearAsyncInterval = (intervalObj) => {\r\n  intervalObj.run = false\r\n  clearTimeout(intervalObj.ref)\r\n}\r\n\r\nconst defaultExport = { setAsyncInterval, clearAsyncInterval }\r\nexport default defaultExport\r\n","/*\r\n * UI component for displaying one chat bubble\r\n *\r\n * Note that right/left props only control shape\r\n * Alignment should be handled in the parent\r\n *\r\n * props:\r\n * - text [String] = text to display\r\n * - right [Boolean] = true if bubble on right side\r\n * - left [Boolean] = true if bubble on left side\r\n * - color [String] = \"primary\" or \"secondary\"\r\n */\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { getShortDateTime } from '../../../util'\r\n\r\nimport {\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n  },\r\n  primaryColor: {\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  secondaryColor: {\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  text: {\r\n    whiteSpace: 'pre', // Allow new lines\r\n  },\r\n  date: {\r\n    color: theme.palette.text.hint\r\n  },\r\n}))\r\n\r\nexport default function ChatBubble (props) {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    text,\r\n    date,\r\n    // TODO: Shape based on these\r\n    // left,\r\n    // right,\r\n    color,\r\n  } = props\r\n\r\n  const colorClass = color === 'secondary' ? classes.secondaryColor : classes.primaryColor\r\n\r\n  return (\r\n    <Paper className={`${classes.root} ${colorClass}`} elevation={1}>\r\n      <div>\r\n        <Typography variant=\"body2\" className={classes.text}>\r\n          {text}\r\n        </Typography>\r\n      </div>\r\n      <div>\r\n        <Typography variant=\"caption\" className={classes.date}>\r\n          {getShortDateTime(date)}\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  )\r\n\r\n\r\n}\r\n","/*\r\n * UI Component for containing a chat input row\r\n * Displays a user input box and send button\r\n *\r\n * props:\r\n * - placeholder [String] = text to display in text box when no input\r\n * - onSendClick [Function] = method to call when the \"send\" button is clicked\r\n */\r\n\r\nimport React, { useCallback, useState, useRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useAlert from '../../../hooks/useAlert'\r\n\r\nimport { sendMessage } from '../../../server'\r\n\r\nimport { TextField, IconButton} from '@material-ui/core'\r\nimport SendIcon from '@material-ui/icons/Send'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  textField: {\r\n    flexGrow: 1,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nexport default function ChatInput (props) {\r\n  const classes = useStyles()\r\n  const inputRef = useRef(null)\r\n  const { addAlert } = useAlert()\r\n\r\n  // NOTE: This may be causing too many re-renders? But unsure how to mitigate\r\n  //       Doesn't appear to severely impact performance, given small component\r\n  const [text, setText] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const {\r\n    placeholder,\r\n    userTo,\r\n  } = props\r\n\r\n  const onSendClick = useCallback((text) => {\r\n    // TODO: Loading icons and things\r\n    setDisabled(true)\r\n\r\n    // Send message to server\r\n    sendMessage({userTo, text})\r\n      .then(() => {\r\n        setText('')\r\n\r\n        setDisabled(false)\r\n        inputRef.current.focus()\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not send message. Please try again.'\r\n        })\r\n\r\n        setDisabled(false)\r\n        inputRef.current.focus()\r\n      })\r\n  }, [userTo, addAlert])\r\n\r\n  // Shift+Enter makes new line\r\n  // Enter sends message\r\n  const onChatKeypress = (e) => {\r\n    const enterPressed = e.keyCode === 13\r\n    const shiftHeld = e.shiftKey\r\n    if (enterPressed) {\r\n      if (!shiftHeld) onSendClick(text)\r\n      else setText(text + '\\n')\r\n    }\r\n  }\r\n  const onChatChange = (e) => {\r\n    const newText = e.target.value\r\n\r\n    // If we hit enter, let onChatKeypress handle the event\r\n    const textAdded = newText.length > text.length\r\n    const enterPressed = textAdded && newText.endsWith('\\n')\r\n\r\n    if (!enterPressed) setText(newText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        placeholder={placeholder || 'Message'}\r\n        multiline\r\n        value={text}\r\n        rowsMax={4}\r\n        autoFocus\r\n        onChange={onChatChange}\r\n        onKeyDown={onChatKeypress}\r\n        disabled={disabled}\r\n        inputRef={inputRef}\r\n      />\r\n\r\n      {/* Wrap in div so button doesn't grow in height */}\r\n      <div>\r\n        <IconButton onClick={() => onSendClick(text)}>\r\n          <SendIcon/>\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/*\r\n * An area for displaying messages between two users\r\n *\r\n * Message objects:\r\n * { date: Date, sender: String, text: String }\r\n *\r\n * props:\r\n * - messages [List] = Message objects to display contents of\r\n * - rightSender [String] = sender to put on the right side of screen;\r\n *                          other sender(s) will be put on the left\r\n */\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport ChatBubble from './ChatBubble'\r\nimport ChatInput from './ChatInput'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column-reverse',\r\n    position: 'relative',\r\n  },\r\n  inputContainer: {\r\n    width: '100%',\r\n  },\r\n  chatContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    overflow: 'auto', // TODO: Make scrollbar look prettier?\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  chat: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  chatBubble: {\r\n    maxWidth: '60%',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  chatRight: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  chatLeft: {\r\n    justifyContent: 'flex-start',\r\n  },\r\n}))\r\n\r\n// TODO: Fix up scrolling\r\nexport default function ChatView (props) {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    otherUser,\r\n  } = props\r\n\r\n  const {\r\n    messages,\r\n    profile,\r\n    userId,\r\n  } = otherUser\r\n\r\n  const otherUserFirstName = profile && profile.displayName ? profile.displayName.split(' ')[0] : 'Matched User'\r\n  const inputPlaceholder = `Message ${otherUserFirstName}`\r\n\r\n  const chats = (messages || []).map((m, i) => {\r\n    const otherUserSent = m.senderUserId === userId\r\n    const directionClass = otherUserSent ? classes.chatLeft : classes.chatRight\r\n    const color = otherUserSent ? 'secondary' : 'primary'\r\n\r\n    return (\r\n      <div className={`${classes.chat} ${directionClass}`} key={i}>\r\n        <div className={classes.chatBubble}>\r\n          <ChatBubble\r\n            color={color}\r\n            text={m.text}\r\n            date={m.date}\r\n            left={otherUserSent}\r\n            right={!otherUserSent}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.inputContainer}>\r\n        <ChatInput\r\n          placeholder={inputPlaceholder}\r\n          userTo={userId}\r\n        />\r\n      </div>\r\n      <div className={classes.chatContainer}>\r\n        {chats}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/*\r\n * Dialog with fields for editing a user's profile\r\n * Events/data must be handled in parent\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport UserAvatar from '../user/UserAvatar'\r\nimport FormDialog from '../FormDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    maxWidth: 600,\r\n    minWidth: 600,\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  cancelButton: {\r\n    // background: theme.palette.error.dark,\r\n    color: theme.palette.error.light,\r\n  },\r\n  saveButton: {\r\n    // background: theme.palette.primary.dark,\r\n    color: theme.palette.primary.light,\r\n  },\r\n  editableMargin: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  avatarRow: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatarTextField: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n}))\r\n\r\nexport default function EditProfileDialog(props) {\r\n  const {\r\n    open,\r\n    onCancel,\r\n    onSave,\r\n    profile,\r\n  } = props\r\n\r\n  const {\r\n    description,\r\n    displayName,\r\n    profilePicUrl,\r\n  } = (profile || {})\r\n\r\n  const classes = useStyles()\r\n  const [ descChange, setDescChange ] = useState(null)\r\n  const [ dispNameChange, setDispNameChange ] = useState(null)\r\n\r\n  const dispNameError = dispNameChange !== null && dispNameChange.length === 0\r\n\r\n  // Reset any previous changes when opening\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setDescChange(null)\r\n      setDispNameChange(null)\r\n    }\r\n  }, [open])\r\n\r\n  const onSaveClick = () => {\r\n    if (!onSave) return\r\n\r\n    const changeObj = {}\r\n    if (descChange !== null) changeObj.description = descChange.trim()\r\n    if (dispNameChange !== null) changeObj.displayName = dispNameChange.trim()\r\n\r\n    onSave(changeObj)\r\n  }\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Edit Profile\"\r\n      submitButtonText=\"Save Changes\"\r\n      submitButtonDisabled={dispNameError}\r\n      onSubmit={onSaveClick}\r\n      onClose={() => onCancel && onCancel()}\r\n      onCancel={() => onCancel && onCancel()}\r\n    >\r\n      <span className={classes.avatarRow}>\r\n        <UserAvatar\r\n          className={classes.avatar}\r\n          src={profilePicUrl}\r\n          displayName={dispNameChange !== null ? dispNameChange : displayName}\r\n        />\r\n        {/* TODO: Image upload button? Paste button? */}\r\n        <TextField\r\n          className={classes.avatarTextField}\r\n          fullWidth\r\n          disabled\r\n          variant=\"outlined\"\r\n          label=\"Profile Picture\"\r\n          value=\"(This is pulled from your Spotify account)\"\r\n        />\r\n      </span>\r\n      <TextField\r\n        className={classes.editableMargin}\r\n        label=\"Display Name\"\r\n        variant=\"outlined\"\r\n        error={dispNameError}\r\n        helperText={dispNameError && \"Must be defined!\"}\r\n        fullWidth\r\n        required\r\n        placeholder=\"What should we call you?\"\r\n        value={dispNameChange !== null ? dispNameChange : displayName}\r\n        onChange={(e) => setDispNameChange(e.target.value)}\r\n        inputProps={{ maxLength: 18 }}\r\n      />\r\n      <TextField\r\n        className={classes.editableMargin}\r\n        label=\"Personal Description\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        multiline\r\n        placeholder=\"Tell us about yourself!\"\r\n        rowsMax={6}\r\n        value={descChange !== null ? descChange : description}\r\n        onChange={(e) => setDescChange(e.target.value)}\r\n      />\r\n    </FormDialog>\r\n  )\r\n}\r\n","/*\r\n * UI component for viewing logged-in account details\r\n *\r\n * Props:\r\n * - username (String) = username of user's profile\r\n * - profile (obj) = { displayName, status, description }\r\n *   - (TODO: This should probably be a defined class)\r\n * - editable (Boolean) = true if should allow for editing\r\n *\r\n * TODO: Should rename to \"Profile\", which is more accurate\r\n *       Separate \"Account\" section should more be settings & logistics\r\n * TODO: Should have a \"editor\" mode where sections are editable\r\n */\r\n\r\nimport React, { useCallback, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport { setProfile } from './accountSlice'\r\nimport { editProfile } from '../../server'\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nimport EditProfileDialog from './EditProfileDialog'\r\n\r\nimport './Account.css'\r\nimport { theme } from '../../theme'\r\n\r\n// == CONSTANTS ==\r\n\r\nconst MAIN_CARD_MAX_WIDTH = '700px'\r\nconst MARGIN = '8px'\r\n\r\nconst HEADER_GRADIENT = theme.getGradient([theme.palette.background.default, theme.palette.primary.dark])\r\nconst BODY_GRADIENT = theme.getGradient([theme.palette.background.default, theme.palette.secondary.dark])\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  description: {\r\n    whiteSpace: 'pre', // Allow new lines\r\n  },\r\n  hintText: {\r\n    color: theme.palette.text.hint\r\n  },\r\n}))\r\n\r\n// == TEMP TEST STUFF ==\r\n\r\nconst PROFILE_IMG_SIZE = theme.images.squareImageHeight\r\n\r\n// == CLASS ==\r\n\r\n// TODO: Rename to Profile (account settings could & should be separate!)\r\nexport default function Account (props) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const { addAlert } = useAlert()\r\n\r\n  const userId = useSelector(state => state.account.userId)\r\n\r\n  const {\r\n    username,\r\n    profile,\r\n    editable,\r\n  } = props\r\n\r\n  const [ editDialogOpen, setEditDialogOpen ] = useState(false)\r\n\r\n  const openEditDialog = useCallback(() => {\r\n    setEditDialogOpen(true)\r\n  }, [])\r\n  const onEditDialogCancel = useCallback(() => {\r\n    setEditDialogOpen(false)\r\n  }, [])\r\n  const onEditDialogSave = useCallback((changes) => {\r\n    editProfile({ userId, changes })\r\n      .then((profile) => dispatch(setProfile(profile)))\r\n      .then(() => setEditDialogOpen(false))\r\n      .then(() => addAlert({\r\n        text: 'Profile updated',\r\n        severity: 'success',\r\n        type: 'snackbar',\r\n      }))\r\n      .catch((e) => {\r\n        addAlert({\r\n          title: e.name,\r\n          text: e.message || 'Could not profile. Please try again.',\r\n          severity: 'error',\r\n          type: 'dialog',\r\n        })\r\n      })\r\n  }, [userId, dispatch, addAlert])\r\n\r\n  const Header = (() => (\r\n    <Card style={{width: '100%', background: HEADER_GRADIENT}}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        style={{width: '100%', margin: 0}}\r\n      >\r\n        <Grid item container xs={10}>\r\n          <Card style={{width: PROFILE_IMG_SIZE, margin: MARGIN, display: 'inline-flex'}}>\r\n            <CardMedia\r\n              image={profile.profilePicUrl}\r\n              title={username + '\\'s profile picture'}\r\n              style={{height: PROFILE_IMG_SIZE, width: PROFILE_IMG_SIZE}}\r\n            />\r\n          </Card>\r\n          <span style={{textAlign: 'left', margin: MARGIN, display: 'inline-flex', alignItems: 'center', flexGrow: 1}}>\r\n            <div style={{flexGrow: 1}}>\r\n              {/* TODO: Handle very long display names? */}\r\n              <Typography variant=\"h5\">\r\n                {profile.displayName}\r\n              </Typography>\r\n            </div>\r\n            {editable &&\r\n             <Button\r\n               startIcon={<EditIcon/>}\r\n               variant=\"outlined\"\r\n               onClick={openEditDialog}\r\n             >\r\n               Edit Profile\r\n             </Button>\r\n            }\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  ))\r\n\r\n  const Description = (() => (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    // TODO: Background gradient, primary -> black\r\n      style={{width: '100%', margin: 0}}\r\n    >\r\n      <Grid item container xs={10}>\r\n        <Card\r\n          style={{width: '100%',\r\n                  margin: MARGIN,\r\n                  padding: MARGIN,\r\n                  textAlign: 'left',}}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            Personal Description\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={`${classes.description} ${!profile.description ? classes.hintText : ''}`}\r\n          >\r\n            {\r\n              profile.description || '(no description)'\r\n            }\r\n          </Typography>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  ))\r\n\r\n  return (\r\n    <div style={{width: '100%', alignItems: 'middle'}}>\r\n      <Card\r\n        style={{padding: 0,\r\n                maxWidth: MAIN_CARD_MAX_WIDTH,\r\n                margin: 'auto',\r\n                background: BODY_GRADIENT}}\r\n      >\r\n        {/* TODO: Probably should put all \"Grid\" type stuff here for easier modifications */}\r\n        <Header/>\r\n        <Description/>\r\n      </Card>\r\n      <EditProfileDialog\r\n        open={editDialogOpen}\r\n        onCancel={onEditDialogCancel}\r\n        onSave={onEditDialogSave}\r\n        profile={profile}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n * UI component for a single \"tile\" displaying passed song information\r\n *\r\n * Props (all Strings):\r\n *   - song        (String)\r\n *   - artist      (String)\r\n *   - album       (String)\r\n *   - albumArtUrl (String)\r\n *\r\n * ^ If any are not included, it will simply be excluded from display\r\n */\r\n\r\nimport React from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  media: {\r\n    height: '100%',\r\n    width: 'auto'\r\n  },\r\n  contents: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  subText: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n}))\r\n\r\nexport default function SongTile (props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} raised>\r\n      {/*Album Art*/}\r\n      <CardMedia\r\n        image={props.albumArtUrl}\r\n        title={props.album + ' album cover'}\r\n        className={classes.media}\r\n        component=\"img\"\r\n      />\r\n\r\n      {/*Song detail display*/}\r\n      <div className={classes.contents}>\r\n        {/* TODO: Horizontal-scroll if too long */}\r\n        <CardContent>\r\n          <Typography variant=\"h6\">\r\n            {props.song}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.subText}>\r\n            {props.artist}\r\n          </Typography>\r\n          <Typography variant=\"caption\" className={classes.subText}>\r\n            {props.album}\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","/*\r\n * Brief, stylized, memoized wrapper for a list of SongTiles\r\n *\r\n * Memoizing ensures this doesn't re-render if the song list remains the same,\r\n * preventing lag when used\r\n */\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport SongTile from './SongTile'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  songTile: {\r\n    height: theme.tile.height,\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst SongList = React.memo(({ songs }) => {\r\n  const classes = useStyles()\r\n\r\n  return songs.map((row, index) => (\r\n    <div className={classes.songTile} key={index}>\r\n      <SongTile\r\n        song={row.song}\r\n        artist={row.artist}\r\n        /* album={row.album} */\r\n        albumArtUrl={row.albumArtUrl}\r\n      />\r\n    </div>\r\n  ))\r\n})\r\n\r\nexport default SongList\r\n","/*\r\n * Component for viewing and interacting with a user\r\n *\r\n * props:\r\n * - onCloseClick [function] = method to call when the \"close\" button is clicked\r\n * - user [obj] = user object, as formatted in store\r\n * - refreshMethod [function] = method to call every second for refreshing this user's data\r\n *     - Expected arguments: { matchId }\r\n *     - Expected return: Promise\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { setAsyncInterval, clearAsyncInterval } from '../../asyncInterval'\r\n\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ProfileIcon from '@material-ui/icons/AccountCircle'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport SongsIcon from '@material-ui/icons/LibraryMusic'\r\n\r\nimport ChatView from './chat/ChatView'\r\nimport Account from '../account/Account'\r\nimport SongTileList from '../SongTileList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'relative',\r\n  },\r\n  // TODO: Can't scroll on overflow\r\n  contents: {\r\n    padding: theme.spacing(3),\r\n    paddingTop: 60 + theme.spacing(3),\r\n    height: '100%',\r\n    overflow: 'auto',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    top: 0,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hintText: {\r\n    color: theme.palette.text.hint\r\n  },\r\n}))\r\n\r\nexport default function UserView (props) {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    onCloseClick,\r\n    user,\r\n    defaultTab,\r\n    chatHidden,\r\n    refreshMethod,\r\n  } = props\r\n\r\n  const {\r\n    songs,\r\n    profile,\r\n    username,\r\n    matchId,\r\n  } = user\r\n\r\n  const TABS_CONFIG = [{\r\n    val: 'profile',\r\n    icon: <ProfileIcon/>,\r\n    component: <Account username={username} profile={profile}/>,\r\n  }, {\r\n    val: 'songs',\r\n    icon: <SongsIcon/>,\r\n    component: !songs || songs.length === 0\r\n      ?\r\n      <Typography variant=\"subtitle1\" className={classes.hintText}>\r\n        No matching songs found\r\n      </Typography>\r\n      :\r\n      <SongTileList songs={songs}/>\r\n  }, {\r\n    val: 'chat',\r\n    icon: <ChatIcon/>,\r\n    component: (\r\n      <ChatView\r\n        otherUser={user}\r\n      />\r\n    ),\r\n  }].filter(o => !(o.val === 'chat' && chatHidden))\r\n\r\n  // Call refreshMethod every second\r\n  // Allows any parent to consistently update data, as necessary\r\n  //\r\n  // Currently tied to matchId, but should always be tied to few parameters to\r\n  // prevent repeated calls, especially avoiding parameters that refreshMethod\r\n  // could change\r\n  useEffect(() => {\r\n    if (refreshMethod) {\r\n      const wrappedMethod = () => refreshMethod({ matchId })\r\n      const chatInterval = setAsyncInterval(wrappedMethod, 1000)\r\n      return () => {\r\n        clearAsyncInterval(chatInterval)\r\n      }\r\n    }\r\n  }, [ refreshMethod, matchId ])\r\n\r\n  const DEFAULT_TAB_INDEX = (defaultTab && TABS_CONFIG.findIndex(o => o.val === defaultTab)) || 0\r\n  const [activeTabIndex, setActiveTabIndex] = useState(DEFAULT_TAB_INDEX)\r\n\r\n  useEffect(() => {\r\n    setActiveTabIndex(DEFAULT_TAB_INDEX)\r\n  }, [DEFAULT_TAB_INDEX])\r\n\r\n  const activeComponent = TABS_CONFIG[activeTabIndex].component\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={5}>\r\n      <AppBar className={classes.appBar} elevation={1}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            { user.profile.displayName }\r\n          </Typography>\r\n          <Tabs value={activeTabIndex} textColor=\"inherit\" className={classes.tabs}>\r\n            {TABS_CONFIG.map((o, i) => (\r\n              <Tab key={o.val} label={o.val}\r\n                   icon={o.icon}\r\n                   onClick={() => setActiveTabIndex(i)}\r\n                   className={classes.tab}/>\r\n            ))}\r\n          </Tabs>\r\n          <IconButton color=\"inherit\" onClick={onCloseClick}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div className={classes.contents}>\r\n        {activeComponent}\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","/*\r\n * Small FormDialog wrapper for confirming a match dismissal\r\n * Primarily intended for use in the Matches tab when dismissing a user with chat history\r\n */\r\n\r\nimport React from 'react'\r\n\r\nimport {\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport FormDialog from '../FormDialog'\r\n\r\nexport default function MatchDismissDialog(props) {\r\n  const {\r\n    open,\r\n    onCancel,\r\n    onSubmit,\r\n  } = props\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Match Dismiss\"\r\n      submitButtonText=\"Dismiss\"\r\n      onSubmit={() => onSubmit && onSubmit()}\r\n      onClose={() => onCancel && onCancel()}\r\n      onCancel={() => onCancel && onCancel()}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        Are you sure you want to dismiss this user? You will lose access to all\r\n        prior chat history.<br/>\r\n        <strong>This cannot be undone.</strong>\r\n      </Typography>\r\n    </FormDialog>\r\n  )\r\n}\r\n","\r\n/*\r\n * Component for displaying the general \"Matches\" view\r\n *\r\n * Intended to be more general and used between both \"Matches\" and \"Meet\" tabs,\r\n * given their similarities. Noted as \"Match\" since \"Meet\" is a special case,\r\n * disabling some items\r\n *\r\n * If using this for meeting, inMeetMode flag should be used\r\n * This has the following changes:\r\n * - \"Chat\" button -> \"Add Person\" button\r\n * - No chat tab when viewing the user\r\n */\r\n\r\nimport React, { useState, useCallback } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport { rejectMatch, acceptMatch } from '../../server'\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\r\n\r\nimport RefreshButton from '../RefreshButton'\r\nimport UserTile from '../user/UserTile'\r\nimport UserView from '../user/UserView'\r\nimport MatchDismissDialog from './MatchDismissDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'relative',\r\n  },\r\n  card: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n    maxWidth: 275,\r\n  },\r\n  refresh: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 0,\r\n    // TODO: Re-define here and de-couple margin from refresh button\r\n    // margin: theme.spacing(1),\r\n  },\r\n  userView: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n  },\r\n  matchesView: {\r\n    height: '100%',\r\n    width: '100%',\r\n    paddingRight: 50,\r\n    position: 'relative',\r\n  },\r\n  hintText: {\r\n    color: theme.palette.text.hint,\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nexport default function MatchesView (props) {\r\n  const classes = useStyles()\r\n  const { addAlert } = useAlert()\r\n\r\n  const {\r\n    inMeetMode,\r\n    matches,\r\n    onRefreshClick,\r\n    loading,\r\n    refreshMethod,\r\n    useDismissWarningDialog,\r\n    onChange,\r\n  } = props\r\n\r\n  const [ selectedTab, selectTab ] = useState(null)\r\n\r\n  // Tie the selected user to an index to ensure reactivity if that item changes\r\n  const [ selectedUserIndex, selectUserIndex ] = useState(null)\r\n  const [ dismissDialogOpen, setDismissDialogOpen ] = useState(false)\r\n  const [ onDismissDialogSubmit, setOnDismissDialogSubmit ] = useState(null)\r\n  const selectedUser = selectedUserIndex != null ? matches[selectedUserIndex] : null\r\n\r\n  const onChatClick = useCallback((index) => {\r\n    selectTab('chat')\r\n    selectUserIndex(index)\r\n  }, [selectTab, selectUserIndex])\r\n\r\n  const onProfileClick = useCallback((index) => {\r\n    selectTab('profile')\r\n    selectUserIndex(index)\r\n  }, [selectTab, selectUserIndex])\r\n\r\n  const onSongsClick = useCallback((index) => {\r\n    selectTab('songs')\r\n    selectUserIndex(index)\r\n  }, [selectTab, selectUserIndex])\r\n\r\n  const closeUserView = useCallback(() => {\r\n    selectUserIndex(null)\r\n  }, [selectUserIndex])\r\n\r\n  const onAddClick = useCallback((user) => {\r\n    const {\r\n      matchId\r\n    } = user\r\n\r\n    acceptMatch({ matchId })\r\n      .then(() => {\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'success',\r\n          text: 'Match accepted',\r\n        })\r\n        onChange && onChange()\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not accept match',\r\n        })\r\n      })\r\n  }, [addAlert, onChange])\r\n\r\n  const onCloseClick = useCallback((user) => {\r\n    const {\r\n      matchId\r\n    } = user\r\n\r\n    const rejectMethod = () => {\r\n      rejectMatch({ matchId })\r\n        .then(() => {\r\n          addAlert({\r\n            type: 'snackbar',\r\n            severity: 'info',\r\n            text: 'Match dismissed',\r\n          })\r\n          onChange && onChange()\r\n        })\r\n        .catch((e) => {\r\n          console.error(e)\r\n          addAlert({\r\n            type: 'snackbar',\r\n            severity: 'error',\r\n            text: 'Could not dismiss match',\r\n          })\r\n        })\r\n    }\r\n\r\n    if (useDismissWarningDialog) {\r\n      setOnDismissDialogSubmit(() => () => {\r\n        rejectMethod()\r\n        setDismissDialogOpen(false)\r\n      })\r\n      setDismissDialogOpen(true)\r\n\r\n    } else {\r\n      rejectMethod()\r\n    }\r\n  }, [\r\n    setOnDismissDialogSubmit,\r\n    setDismissDialogOpen,\r\n    useDismissWarningDialog,\r\n    addAlert,\r\n    onChange,\r\n  ])\r\n\r\n  const onDismissDialogCancel = useCallback(() => {\r\n    setDismissDialogOpen(false)\r\n    setOnDismissDialogSubmit(null)\r\n  }, [setDismissDialogOpen, setOnDismissDialogSubmit])\r\n\r\n  const userTiles = !matches || matches.length === 0\r\n        ?\r\n        <Typography variant=\"h6\" className={classes.hintText}>\r\n          No matches yet!\r\n        </Typography>\r\n        :\r\n        matches.map((user, i) => (\r\n          <UserTile\r\n            key={i}\r\n            className={classes.card}\r\n            user={user}\r\n            onActionClick={() => inMeetMode ? onAddClick(user) : onChatClick(i)}\r\n            onProfileClick={() => onProfileClick(i)}\r\n            onCloseClick={() => onCloseClick(user)}\r\n            onSongsClick={() => onSongsClick(i)}\r\n            actionButtonIcon={inMeetMode ? <PersonAddIcon/> : <ChatIcon/>}\r\n          />\r\n        ))\r\n\r\n  const userView = (\r\n    <div className={classes.userView}>\r\n      <UserView\r\n        onCloseClick={closeUserView}\r\n        user={selectedUser}\r\n        defaultTab={selectedTab}\r\n        chatHidden={inMeetMode}\r\n        refreshMethod={refreshMethod}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const matchesView = (\r\n    <div className={classes.matchesView}>\r\n      <Grid container alignItems=\"flex-start\" justify=\"flex-start\">\r\n        { userTiles }\r\n      </Grid>\r\n      <RefreshButton\r\n        onClick={() => onRefreshClick && onRefreshClick()}\r\n        loading={loading}\r\n        className={classes.refresh}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        { matchesView }\r\n        { selectedUser && userView }\r\n      </div>\r\n      <MatchDismissDialog\r\n        open={dismissDialogOpen}\r\n        onSubmit={() => onDismissDialogSubmit && onDismissDialogSubmit()}\r\n        onCancel={() => onDismissDialogCancel()}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","/*\r\n * UI component for the \"Meet\" section of the app, allowing people to find\r\n * others with like music interests\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useAlert from '../../hooks/useAlert'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { clearMatches, setMatches } from './meetSlice'\r\nimport { getPotentialMatches } from '../../server'\r\n\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\n\r\nimport MatchesView from '../matches/MatchesView'\r\n\r\nconst BUTTON_HEIGHT = 70\r\nconst PROGRESS_HEIGHT = BUTTON_HEIGHT / 1.5\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    height: BUTTON_HEIGHT,\r\n  },\r\n  buttonProgress: {\r\n    color: theme.palette.primary.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginLeft: (-PROGRESS_HEIGHT)/2,\r\n    marginTop: (-PROGRESS_HEIGHT)/2,\r\n  },\r\n  initContainer: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  tile: {\r\n    height: theme.tile.height,\r\n    width: '100%',\r\n    padding: '8px',\r\n  },\r\n}))\r\n\r\nexport default function Meet () {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const { addAlert } = useAlert()\r\n  const matches = useSelector(state => state.meet.matches)\r\n\r\n  const matchesPresent = matches && matches.length > 0\r\n  const [showMatches, setShowMatches] = useState(matchesPresent)\r\n\r\n  const [searching, setSearching] = useState(false)\r\n  const [buttonDisabled, setButtonDisabled] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  let timeout = null\r\n\r\n  useEffect(() => (() => { clearTimeout(timeout) }))\r\n\r\n  function onRefreshClick () {\r\n    // Change UI to indicate loading\r\n    setButtonDisabled(true)\r\n    setSearching(true)\r\n\r\n    getPotentialMatches()\r\n      .then((matches) => {\r\n        dispatch(setMatches(matches))\r\n\r\n        // Success animation\r\n        setSuccess(true)\r\n        timeout = setTimeout(() => {\r\n          setShowMatches(true)\r\n          setSuccess(false)\r\n          setButtonDisabled(false)\r\n        }, 2000)\r\n      })\r\n\r\n      .catch ((e) => {\r\n        console.error(e)\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not retrieve potential matches'\r\n        })\r\n\r\n        setShowMatches(false)\r\n        setSuccess(false)\r\n        setButtonDisabled(false)\r\n        dispatch(clearMatches())\r\n      })\r\n\r\n      .finally(() => {\r\n        setSearching(false)\r\n      })\r\n  }\r\n\r\n  // TODO: Put this logic into a re-usable component\r\n  // TODO: Add animation between progress and check\r\n  const initComp = (\r\n    <div className={classes.initContainer}>\r\n      <Grid\r\n        justify=\"center\"\r\n        alignContent=\"center\"\r\n        container\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          disabled={buttonDisabled}\r\n          onClick={onRefreshClick}\r\n        >\r\n          <Typography variant=\"h4\">\r\n            Meetify!\r\n          </Typography>\r\n\r\n          {searching && !success &&\r\n           <CircularProgress\r\n             className={classes.buttonProgress}\r\n             size={PROGRESS_HEIGHT}\r\n           />}\r\n\r\n          {success &&\r\n           <Check\r\n             className={classes.buttonProgress}\r\n             style={{fontSize: PROGRESS_HEIGHT}}\r\n           />}\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  )\r\n\r\n  const meetView = (\r\n    <MatchesView\r\n      inMeetMode\r\n      matches={matches}\r\n      loading={searching}\r\n      onRefreshClick={onRefreshClick}\r\n      onChange={() => onRefreshClick()}\r\n    />\r\n  )\r\n  // TODO: Add fade animation between these, possibly put into generic component first\r\n  if (showMatches) return meetView\r\n  else return initComp\r\n}\r\n","/*\r\n * \"Intersect\" portion of the app, selectable from the tab bar\r\n * Allows current user to intersect their liked songs with another user\r\n * (NOTE: Currently just contains test data)\r\n */\r\n\r\nimport React, { useState, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport { setIntersectUsername, setSongs } from './intersectSlice'\r\nimport { getUserSongIntersection } from '../../server'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport SongTileList from '../SongTileList'\r\nimport ButtonProgress from '../ButtonProgress'\r\n\r\nexport default function Intersect (props) {\r\n  const dispatch = useDispatch()\r\n  const { addAlert } = useAlert()\r\n  const textRef = useRef(null)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Use store primarily to maintain an internal \"cache\" when this gets unmounted\r\n  const username = useSelector(state => state.intersect.username)\r\n  const songs = useSelector(state => state.intersect.songs)\r\n\r\n  const submitDisabled = !username || loading\r\n  const textDisabled = loading\r\n\r\n  const handleSubmit = () => {\r\n    if (submitDisabled) return\r\n\r\n    dispatch(setSongs([]))\r\n    setLoading(true)\r\n    getUserSongIntersection({ username })\r\n      .then((songs) => {\r\n        setLoading(false)\r\n        dispatch(setSongs(songs))\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n        console.error(e)\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not retrieve songs. Make sure the username is correct and try again!',\r\n        })\r\n      })\r\n      .finally(() => {\r\n        textRef.current.focus()\r\n      })\r\n  }\r\n\r\n  const onKeypress = (e) => {\r\n    const enterPressed = e.keyCode === 13\r\n    if (enterPressed) handleSubmit()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Other User's Username\"\r\n            variant=\"outlined\"\r\n            value={username}\r\n            disabled={textDisabled}\r\n            onChange={e => dispatch(setIntersectUsername(e.target.value))}\r\n            onKeyDown={onKeypress}\r\n            inputRef={textRef}\r\n            autoFocus\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            color=\"primary\"\r\n            disabled={submitDisabled}\r\n            onClick={() => handleSubmit()}\r\n          >\r\n            { !loading ?\r\n              \"Submit\" :\r\n              <ButtonProgress/>\r\n            }\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* TODO: Make scrollable, e.g.... */}\r\n      {/* <div style={{ overflowY: 'auto', height: '200px' }}> */}\r\n      <div>\r\n        <SongTileList songs={songs}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n * Component for displaying the Matches tab, showing users who have been\r\n * previously matched, allowing for chats, profile, etc.\r\n *\r\n * Takes data from the state.matches\r\n */\r\n\r\nimport React, { useEffect, useState, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useAlert from '../../hooks/useAlert'\r\n\r\nimport { setMatches, setMessages } from './matchesSlice'\r\nimport { getAcceptedMatches, getMessages } from '../../server'\r\n\r\nimport MatchesView from './MatchesView'\r\n\r\nexport default function Matches (props) {\r\n  const dispatch = useDispatch()\r\n  const { addAlert } = useAlert()\r\n\r\n  const matches = useSelector((state) => state.matches.matches)\r\n\r\n  const [ loading, setLoading ] = useState(false)\r\n\r\n  // useCallback necessary for object creation\r\n  // https://dmitripavlutin.com/dont-overuse-react-usecallback/\r\n  const reloadMatches = useCallback((opts) => {\r\n    setLoading(true)\r\n\r\n    return getAcceptedMatches()\r\n      .then((matches) => {\r\n        dispatch(setMatches(matches))\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not load matches',\r\n        })\r\n        throw e\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }, [dispatch, addAlert])\r\n\r\n  // Automatically load or reload matches upon opening the tab\r\n  useEffect(() => { reloadMatches() }, [reloadMatches])\r\n\r\n  // Method to continually call for refreshing a single user's data from server\r\n  // Called here to ensure lower components can remain mostly decoupled\r\n  const refreshMatch = useCallback(({ matchId }) => {\r\n    console.info(`Refreshing match ${matchId} data...`)\r\n\r\n    return getMessages({ matchId })\r\n      .then((messages) => {\r\n        dispatch(setMessages({ matchId, messages }))\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        addAlert({\r\n          type: 'snackbar',\r\n          severity: 'error',\r\n          text: 'Could not load messages'\r\n        })\r\n        throw e\r\n      })\r\n  }, [dispatch, addAlert])\r\n\r\n  return (\r\n    <MatchesView\r\n      matches={matches}\r\n      loading={loading}\r\n      onRefreshClick={reloadMatches}\r\n      refreshMethod={refreshMatch}\r\n      onChange={() => reloadMatches()}\r\n      useDismissWarningDialog\r\n    />\r\n  )\r\n}\r\n","/*\r\n * UI component for the main entry point for the app\r\n */\r\n\r\nimport React, { useState, useRef } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Tab, Paper } from '@material-ui/core'\r\n\r\nimport AppTabBar from './AppTabBar'\r\nimport Login from './account/Login'\r\n\r\nimport Meet from './meet/Meet'\r\nimport Intersect from './intersect/Intersect'\r\nimport Account from './account/Account'\r\nimport Matches from './matches/Matches'\r\n\r\nimport './App.css'\r\n\r\nconst TRANSITION_DURATION = 500\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabBar: {\r\n    float: 'left',\r\n    maxWidth: '25%',\r\n    height: '100%',\r\n  },\r\n}))\r\n\r\nexport default function App () {\r\n  const classes = useStyles()\r\n\r\n  const loggedIn = useSelector((state) => state.account.loggedIn)\r\n  const username = useSelector((state) => state.account.username)\r\n  const profile = useSelector((state) => state.account.profile)\r\n\r\n  const TAB_CONFIG = [{\r\n    label: 'Meet',\r\n    val: 'meet',\r\n    component: <Meet/>,\r\n  },{\r\n    label: 'Matches',\r\n    val: 'matches',\r\n    component: <Matches/>\r\n  }, {\r\n    label: 'Intersect',\r\n    val: 'intersect',\r\n    component: <Intersect/>,\r\n  }, {\r\n    label: 'Profile',\r\n    val: 'profile',\r\n    component: <Account username={username} profile={profile} editable/>,\r\n  }];\r\n\r\n  const TAB_DEFAULT = TAB_CONFIG[0].val\r\n\r\n  const [activeTab, setActiveTab] = useState(TAB_DEFAULT)\r\n\r\n  const getActiveComponent = () => TAB_CONFIG.find(x => x.val === activeTab).component\r\n  const getActiveComponentIndex = () => TAB_CONFIG.findIndex(x => x.val === activeTab)\r\n\r\n  const tabs = TAB_CONFIG.map((x) => (\r\n    <Tab\r\n      key={x.val}\r\n      label={x.label}\r\n      onClick={() => setActiveTab(x.val)}\r\n    />\r\n  ))\r\n\r\n  const component = getActiveComponent();\r\n  const componentIndex = getActiveComponentIndex();\r\n\r\n  const mainAppComp = (\r\n    <>\r\n      <div className={classes.tabBar}>\r\n        <AppTabBar activeIndex={componentIndex}>\r\n          {tabs}\r\n        </AppTabBar>\r\n      </div>\r\n      <div className=\"main-container\">\r\n        {component}\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const loginRef = useRef(null)\r\n  const appRef = useRef(null)\r\n\r\n  return (\r\n    <Paper className=\"app-root\" square style={{position:'relative'}}>\r\n      {/* TODO: Try to make this into generic transition component */}\r\n      <CSSTransition\r\n        classNames=\"fade\"\r\n        timeout={TRANSITION_DURATION}\r\n        unmountOnExit\r\n        style={{position: 'absolute', height: '100%', width: '100%'}}\r\n        nodeRef={loginRef}\r\n      in={!loggedIn}\r\n      >\r\n        <div ref={loginRef}>\r\n          <Login/>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        classNames=\"fade\"\r\n        timeout={TRANSITION_DURATION}\r\n        unmountOnExit\r\n        style={{position: 'absolute', height: '100%', width: '100%'}}\r\n        nodeRef={appRef}\r\n      in={loggedIn}\r\n      >\r\n        <div ref={appRef}>\r\n          <div style={{display: 'flex', height: '100%', width: '100%'}}>\r\n            {mainAppComp}\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    </Paper>\r\n  );\r\n}\r\n","/*\r\n * Main Redux store setup used for enhanced data management\r\n * For more information: https://redux.js.org/\r\n */\r\n\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk' // Allows for asynchronous dispatches\r\n\r\nimport accountReducer from './components/account/accountSlice'\r\nimport intersectReducer from './components/intersect/intersectSlice'\r\nimport meetReducer from './components/meet/meetSlice'\r\nimport matchesReducer from './components/matches/matchesSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    account: accountReducer,\r\n    intersect: intersectReducer,\r\n    meet: meetReducer,\r\n    matches: matchesReducer,\r\n  },\r\n  middleware: [thunk],\r\n})\r\n","/*\r\n * Consumes items from the global Alert context to display an error\r\n *\r\n * Intended for use at the top level to be displayed throughout the program\r\n * (i.e. not intended for importing outside of index.js!)\r\n *\r\n * Strongly referenced Medium article at:\r\n * https://medium.com/yld-blog/handling-global-notifications-with-reacts-context-api-7d8135510d50\r\n *\r\n * Example usage for displaying alert:\r\n *   import useAlert from '../hooks/userAlert'\r\n *   const [ addAlert ] = useAlert()\r\n *\r\n *   // addAlert will automatically call this component and display a\r\n *   // dismissible alert alert\r\n *   addAlert({\r\n *     title: 'Info', // Only displayed if 'dialog' type\r\n *     text: 'Test alert',\r\n *\r\n *     // Controls style of the alert\r\n *     // Options: 'info', 'error', 'success', or 'warning'\r\n *     // Default: 'info'\r\n *     severity: 'info',\r\n *\r\n *     // Controls how alert appears\r\n *     // Options: 'snackbar', 'dialog'\r\n *     // Default: 'snackbar'\r\n *     type: 'snackbar',\r\n *   })\r\n */\r\n\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport { AlertContext } from './AlertProvider'\r\n\r\nimport { Dialog, Snackbar } from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\n\r\nimport { capitalize } from '../../util'\r\n\r\nconst SEVERITIES = [\r\n  'success', 'info', 'warning', 'error',\r\n]\r\n\r\nexport default function AlertNotification () {\r\n  const { alert, removeAlert } = useContext(AlertContext)\r\n\r\n  // Tie opening to separate variable as opposed to using alert itself\r\n  // Ensures no visual glitches when clearing alert\r\n  const [ open, setOpen ] = useState(false)\r\n\r\n  // Manage a queue of alerts, should multiple occur one after another\r\n  //\r\n  // List state management can require a lot of re-renders, so this is managed\r\n  // here as opposed to within AlertProvider to contain re-renders within this\r\n  // component, as opposed to potentially propogating them app-wide\r\n  const [ alertQueue, setAlertQueue ] = useState([])\r\n\r\n  // Watch for new alerts and add them to the queue\r\n  useEffect(() => {\r\n    if (alert && !alertQueue.includes(alert)) {\r\n      removeAlert(alert)\r\n      setAlertQueue([...alertQueue, alert])\r\n    }\r\n  }, [alert, alertQueue, removeAlert])\r\n\r\n  // Open alert when the alertQueue gets new items\r\n  useEffect(() => {\r\n    if (alertQueue.length > 0) {\r\n      setOpen(true)\r\n    }\r\n  }, [alertQueue, setOpen])\r\n\r\n  // Close animation complete; `open` already false\r\n  // Remove item from alert queue\r\n  const onExited = () => {\r\n    setAlertQueue(alertQueue.slice(1))\r\n  }\r\n\r\n  if (alertQueue.length === 0) return <div/>\r\n  const displayedAlert = alertQueue[0]\r\n\r\n  const severity = (SEVERITIES.includes(displayedAlert.severity) && displayedAlert.severity) || 'info'\r\n  const alertDefaulted = {\r\n    severity: severity,\r\n    title: displayedAlert.title || capitalize(severity),\r\n    text: displayedAlert.text || '(no details)',\r\n    type: ['dialog', 'snackbar'].includes(displayedAlert.type) ? displayedAlert.type : 'snackbar',\r\n  }\r\n\r\n  return alertDefaulted.type === 'snackbar' ? (\r\n    <Snackbar\r\n      autoHideDuration={6000}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onExited={onExited}\r\n      color=\"error\"\r\n    >\r\n      <Alert\r\n        severity={alertDefaulted.severity}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        { alertDefaulted.text }\r\n      </Alert>\r\n    </Snackbar>\r\n  ) : (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onExited={onExited}\r\n      maxWidth=\"sm\"\r\n    >\r\n      <Alert\r\n        severity={alertDefaulted.severity}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <AlertTitle>\r\n          { alertDefaulted.title }\r\n        </AlertTitle>\r\n        { alertDefaulted.text }\r\n      </Alert>\r\n    </Dialog>\r\n  )\r\n}\r\n","/*\r\n * App entry-point\r\n * Sets up any styles & preferences then displays entry UI component\r\n */\r\n\r\n// React dependencies & boilerplate\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// App entrypoint\r\nimport App from './components/App';\r\n\r\n// Redux store\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\n// Style imports\r\nimport './style/index.css';\r\nimport './style/transitions.css';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport theme from './theme'\r\n\r\n// Global alert handler\r\nimport AlertProvider from './components/global/AlertProvider';\r\nimport AlertNotification from './components/global/AlertNotification';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline/>\r\n    <ThemeProvider theme={theme}>\r\n      <AlertProvider>\r\n        <Provider store={store}>\r\n          <App/>\r\n        </Provider>\r\n        <AlertNotification/>\r\n      </AlertProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}